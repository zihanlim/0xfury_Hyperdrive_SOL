import { UserOperation } from "@biconomy/core-types";
import { Signer } from "ethers";
import { Bytes } from "ethers/lib/utils";
import { ModuleVersion, MultiChainUserOpDto, MultiChainValidationModuleConfig } from "./utils/Types";
import { BaseValidationModule } from "./BaseValidationModule";
export declare class MultiChainValidationModule extends BaseValidationModule {
    signer: Signer;
    moduleAddress: string;
    version: ModuleVersion;
    private constructor();
    static create(moduleConfig: MultiChainValidationModuleConfig): Promise<MultiChainValidationModule>;
    getAddress(): string;
    getSigner(): Promise<Signer>;
    getDummySignature(): Promise<string>;
    getInitData(): Promise<string>;
    signUserOpHash(userOpHash: string): Promise<string>;
    signMessage(message: Bytes | string): Promise<string>;
    signUserOps(multiChainUserOps: MultiChainUserOpDto[]): Promise<UserOperation[]>;
}
