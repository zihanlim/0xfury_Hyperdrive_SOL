/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WhitelistModule,
  WhitelistModuleInterface,
} from "../WhitelistModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract SmartAccount",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_amount",
        type: "uint96",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "authCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "opsSeen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "uint256",
        name: "sigValidationResult",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_target",
        type: "address",
      },
    ],
    name: "whitelistDestination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161077938038061077983398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6106e6806100936000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80634c79fa64116100505780634c79fa64146100dd5780637b8e8de314610110578063d936547e1461012357600080fd5b806304e75ff11461007757806322f383ea1461008c578063452c04b1146100b2575b600080fd5b61008a610085366004610468565b610146565b005b61009f61009a366004610562565b6102fc565b6040519081526020015b60405180910390f35b6001546100c5906001600160a01b031681565b6040516001600160a01b0390911681526020016100a9565b6101006100eb3660046105ad565b60026020526000908152604090205460ff1681565b60405190151581526020016100a9565b61008a61011e3660046105c6565b610340565b6101006101313660046105c6565b60006020819052908152604090205460ff1681565b6001600160a01b0383166101a15760405162461bcd60e51b815260206004820152601e60248201527f5461726765742063616e206e6f74206265207a65726f2061646472657373000060448201526064015b60405180910390fd5b6001600160a01b03831660009081526020819052604090205460ff1615156001146102345760405162461bcd60e51b815260206004820152602a60248201527f556e617574686f72697a6564203a3a20546172676574206d757374206265207760448201527f686974656c6973656421000000000000000000000000000000000000000000006064820152608401610198565b60405163468721a760e01b81526001600160a01b0385169063468721a7906102679086908690869060009060040161060c565b6020604051808303816000875af1158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa919061068e565b6102f65760405162461bcd60e51b815260206004820181905260248201527f436f756c64206e6f742065786563757465206574686572207472616e736665726044820152606401610198565b50505050565b60008181526002602052604081205460ff16151560010361031f5750600161033a565b506000818152600260205260408120805460ff191660011790555b92915050565b6001546001600160a01b0316331461039a5760405162461bcd60e51b815260206004820152601560248201527f73656e646572206e6f7420617574686f72697a656400000000000000000000006044820152606401610198565b6001600160a01b0381166104165760405162461bcd60e51b815260206004820152602a60248201527f44657374696e6174696f6e207461726765742063616e206e6f74206265207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610198565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b6001600160a01b038116811461044f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561047e57600080fd5b84356104898161043a565b935060208501356104998161043a565b925060408501356bffffffffffffffffffffffff811681146104ba57600080fd5b9150606085013567ffffffffffffffff808211156104d757600080fd5b818701915087601f8301126104eb57600080fd5b8135818111156104fd576104fd610452565b604051601f8201601f19908116603f0116810190838211818310171561052557610525610452565b816040528281528a602084870101111561053e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561057557600080fd5b823567ffffffffffffffff81111561058c57600080fd5b8301610160818603121561059f57600080fd5b946020939093013593505050565b6000602082840312156105bf57600080fd5b5035919050565b6000602082840312156105d857600080fd5b81356105e38161043a565b9392505050565b6002811061060857634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b0385168152600060206bffffffffffffffffffffffff86168184015260806040840152845180608085015260005b8181101561065d5786810183015185820160a001528201610641565b50600060a0828601015260a0601f19601f8301168501019250505061068560608301846105ea565b95945050505050565b6000602082840312156106a057600080fd5b815180151581146105e357600080fdfea2646970667358221220d7cab661478cd6af67eb0fcfc9f5be1d6b30ecb27feaa7612f6a23f1eb2c3cd464736f6c63430008110033";

export class WhitelistModule__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WhitelistModule> {
    return super.deploy(_owner, overrides || {}) as Promise<WhitelistModule>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): WhitelistModule {
    return super.attach(address) as WhitelistModule;
  }
  connect(signer: Signer): WhitelistModule__factory {
    return super.connect(signer) as WhitelistModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistModuleInterface {
    return new utils.Interface(_abi) as WhitelistModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistModule {
    return new Contract(address, _abi, signerOrProvider) as WhitelistModule;
  }
}
