/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenCallbackHandler,
  TokenCallbackHandlerInterface,
} from "../TokenCallbackHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100665760003560e01c8063150b7a0211610050578063150b7a02146100ad578063bc197c81146100e5578063f23a6e611461010757600080fd5b806223de291461006b57806301ffc9a714610085575b600080fd5b6100836100793660046101eb565b5050505050505050565b005b610098610093366004610296565b610127565b60405190151581526020015b60405180910390f35b6100cc6100bb3660046102c7565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100a4565b6100cc6100f336600461037b565b63bc197c8160e01b98975050505050505050565b6100cc610115366004610415565b63f23a6e6160e01b9695505050505050565b60006001600160e01b03198216630a85bd0160e11b148061015857506001600160e01b03198216630271189760e51b145b8061017357506001600160e01b031982166301ffc9a760e01b145b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461019d57600080fd5b919050565b60008083601f8401126101b457600080fd5b50813567ffffffffffffffff8111156101cc57600080fd5b6020830191508360208285010111156101e457600080fd5b9250929050565b60008060008060008060008060c0898b03121561020757600080fd5b61021089610179565b975061021e60208a01610179565b965061022c60408a01610179565b955060608901359450608089013567ffffffffffffffff8082111561025057600080fd5b61025c8c838d016101a2565b909650945060a08b013591508082111561027557600080fd5b506102828b828c016101a2565b999c989b5096995094979396929594505050565b6000602082840312156102a857600080fd5b81356001600160e01b0319811681146102c057600080fd5b9392505050565b6000806000806000608086880312156102df57600080fd5b6102e886610179565b94506102f660208701610179565b935060408601359250606086013567ffffffffffffffff81111561031957600080fd5b610325888289016101a2565b969995985093965092949392505050565b60008083601f84011261034857600080fd5b50813567ffffffffffffffff81111561036057600080fd5b6020830191508360208260051b85010111156101e457600080fd5b60008060008060008060008060a0898b03121561039757600080fd5b6103a089610179565b97506103ae60208a01610179565b9650604089013567ffffffffffffffff808211156103cb57600080fd5b6103d78c838d01610336565b909850965060608b01359150808211156103f057600080fd5b6103fc8c838d01610336565b909650945060808b013591508082111561027557600080fd5b60008060008060008060a0878903121561042e57600080fd5b61043787610179565b955061044560208801610179565b94506040870135935060608701359250608087013567ffffffffffffffff81111561046f57600080fd5b61047b89828a016101a2565b979a969950949750929593949250505056fea264697066735822122060628682cdf7f6ef463b7b51ba4b8201ee737c608e72b6b56ee02ee34476a4ae64736f6c63430008110033";

export class TokenCallbackHandler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenCallbackHandler> {
    return super.deploy(overrides || {}) as Promise<TokenCallbackHandler>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenCallbackHandler {
    return super.attach(address) as TokenCallbackHandler;
  }
  connect(signer: Signer): TokenCallbackHandler__factory {
    return super.connect(signer) as TokenCallbackHandler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenCallbackHandlerInterface {
    return new utils.Interface(_abi) as TokenCallbackHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenCallbackHandler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenCallbackHandler;
  }
}
