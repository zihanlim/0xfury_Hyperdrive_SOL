/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MaliciousAccount,
  MaliciousAccountInterface,
} from "../MaliciousAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_ep",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260405161036638038061036683398101604081905261002291610047565b600080546001600160a01b0319166001600160a01b0392909216919091179055610077565b60006020828403121561005957600080fd5b81516001600160a01b038116811461007057600080fd5b9392505050565b6102e0806100866000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633a871cdd14610030575b600080fd5b61004361003e36600461018b565b610055565b60405190815260200160405180910390f35b6000805460405163b760faf960e01b815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063b760faf99084906024016000604051808303818588803b1580156100a957600080fd5b505af11580156100bd573d6000803e3d6000fd5b50505050506000848061014001906100d591906101df565b8101906100e2919061022d565b9050600060c08601356100fd60a0880135608089013561025c565b610107919061025c565b905060006101158286610275565b9050600061012861010089013583610297565b905083811461017d5760405162461bcd60e51b815260206004820152601d60248201527f5265766572742061667465722066697273742076616c69646174696f6e000000604482015260640160405180910390fd5b506000979650505050505050565b6000806000606084860312156101a057600080fd5b833567ffffffffffffffff8111156101b757600080fd5b840161016081870312156101ca57600080fd5b95602085013595506040909401359392505050565b6000808335601e198436030181126101f657600080fd5b83018035915067ffffffffffffffff82111561021157600080fd5b60200191503681900382131561022657600080fd5b9250929050565b60006020828403121561023f57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561026f5761026f610246565b92915050565b60008261029257634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561026f5761026f61024656fea26469706673582212208c7878223a9688980b51dee0e60cf58bc7f3feba35daed44d800112f804a9d7664736f6c63430008110033";

export class MaliciousAccount__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _ep: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<MaliciousAccount> {
    return super.deploy(_ep, overrides || {}) as Promise<MaliciousAccount>;
  }
  getDeployTransaction(
    _ep: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ep, overrides || {});
  }
  attach(address: string): MaliciousAccount {
    return super.attach(address) as MaliciousAccount;
  }
  connect(signer: Signer): MaliciousAccount__factory {
    return super.connect(signer) as MaliciousAccount__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousAccountInterface {
    return new utils.Interface(_abi) as MaliciousAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MaliciousAccount {
    return new Contract(address, _abi, signerOrProvider) as MaliciousAccount;
  }
}
