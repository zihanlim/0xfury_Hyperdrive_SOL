import {
  require_browser
} from "./chunk-3PGKTKGY.js";
import {
  require_src
} from "./chunk-NBNL52O7.js";
import {
  init_lib as init_lib10,
  init_lib2 as init_lib15,
  init_lib3 as init_lib17,
  init_lib4 as init_lib18,
  init_lib5 as init_lib20,
  init_lib6 as init_lib21,
  init_lib7 as init_lib22,
  lib_exports as lib_exports10,
  lib_exports2 as lib_exports15,
  lib_exports3 as lib_exports17,
  lib_exports4 as lib_exports18,
  lib_exports5 as lib_exports20,
  lib_exports6 as lib_exports21,
  lib_exports7 as lib_exports22
} from "./chunk-SI3342XM.js";
import {
  init_lib,
  init_lib10 as init_lib8,
  init_lib11 as init_lib9,
  init_lib14 as init_lib11,
  init_lib15 as init_lib12,
  init_lib16 as init_lib13,
  init_lib17 as init_lib14,
  init_lib18 as init_lib16,
  init_lib19,
  init_lib2,
  init_lib4 as init_lib3,
  init_lib5 as init_lib4,
  init_lib6 as init_lib5,
  init_lib7 as init_lib6,
  init_lib9 as init_lib7,
  lib_exports,
  lib_exports10 as lib_exports9,
  lib_exports11,
  lib_exports12,
  lib_exports13,
  lib_exports14,
  lib_exports15 as lib_exports16,
  lib_exports16 as lib_exports19,
  lib_exports2,
  lib_exports3,
  lib_exports4,
  lib_exports5,
  lib_exports6,
  lib_exports8 as lib_exports7,
  lib_exports9 as lib_exports8
} from "./chunk-3KD3TUYK.js";
import {
  Buffer,
  __commonJS,
  __toCommonJS,
  init_buffer,
  init_process,
  process
} from "./chunk-3V4EFXE5.js";

// node_modules/ethers/lib/utils.js
var require_utils = __commonJS({
  "node_modules/ethers/lib/utils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function() {
        return m[k];
      } });
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;
    exports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.dnsEncode = exports.parseBytes32String = void 0;
    var abi_1 = (init_lib10(), __toCommonJS(lib_exports10));
    Object.defineProperty(exports, "AbiCoder", { enumerable: true, get: function() {
      return abi_1.AbiCoder;
    } });
    Object.defineProperty(exports, "checkResultErrors", { enumerable: true, get: function() {
      return abi_1.checkResultErrors;
    } });
    Object.defineProperty(exports, "ConstructorFragment", { enumerable: true, get: function() {
      return abi_1.ConstructorFragment;
    } });
    Object.defineProperty(exports, "defaultAbiCoder", { enumerable: true, get: function() {
      return abi_1.defaultAbiCoder;
    } });
    Object.defineProperty(exports, "ErrorFragment", { enumerable: true, get: function() {
      return abi_1.ErrorFragment;
    } });
    Object.defineProperty(exports, "EventFragment", { enumerable: true, get: function() {
      return abi_1.EventFragment;
    } });
    Object.defineProperty(exports, "FormatTypes", { enumerable: true, get: function() {
      return abi_1.FormatTypes;
    } });
    Object.defineProperty(exports, "Fragment", { enumerable: true, get: function() {
      return abi_1.Fragment;
    } });
    Object.defineProperty(exports, "FunctionFragment", { enumerable: true, get: function() {
      return abi_1.FunctionFragment;
    } });
    Object.defineProperty(exports, "Indexed", { enumerable: true, get: function() {
      return abi_1.Indexed;
    } });
    Object.defineProperty(exports, "Interface", { enumerable: true, get: function() {
      return abi_1.Interface;
    } });
    Object.defineProperty(exports, "LogDescription", { enumerable: true, get: function() {
      return abi_1.LogDescription;
    } });
    Object.defineProperty(exports, "ParamType", { enumerable: true, get: function() {
      return abi_1.ParamType;
    } });
    Object.defineProperty(exports, "TransactionDescription", { enumerable: true, get: function() {
      return abi_1.TransactionDescription;
    } });
    var address_1 = (init_lib6(), __toCommonJS(lib_exports6));
    Object.defineProperty(exports, "getAddress", { enumerable: true, get: function() {
      return address_1.getAddress;
    } });
    Object.defineProperty(exports, "getCreate2Address", { enumerable: true, get: function() {
      return address_1.getCreate2Address;
    } });
    Object.defineProperty(exports, "getContractAddress", { enumerable: true, get: function() {
      return address_1.getContractAddress;
    } });
    Object.defineProperty(exports, "getIcapAddress", { enumerable: true, get: function() {
      return address_1.getIcapAddress;
    } });
    Object.defineProperty(exports, "isAddress", { enumerable: true, get: function() {
      return address_1.isAddress;
    } });
    var base64 = __importStar((init_lib8(), __toCommonJS(lib_exports8)));
    exports.base64 = base64;
    var basex_1 = (init_lib13(), __toCommonJS(lib_exports13));
    Object.defineProperty(exports, "base58", { enumerable: true, get: function() {
      return basex_1.Base58;
    } });
    var bytes_1 = (init_lib2(), __toCommonJS(lib_exports2));
    Object.defineProperty(exports, "arrayify", { enumerable: true, get: function() {
      return bytes_1.arrayify;
    } });
    Object.defineProperty(exports, "concat", { enumerable: true, get: function() {
      return bytes_1.concat;
    } });
    Object.defineProperty(exports, "hexConcat", { enumerable: true, get: function() {
      return bytes_1.hexConcat;
    } });
    Object.defineProperty(exports, "hexDataSlice", { enumerable: true, get: function() {
      return bytes_1.hexDataSlice;
    } });
    Object.defineProperty(exports, "hexDataLength", { enumerable: true, get: function() {
      return bytes_1.hexDataLength;
    } });
    Object.defineProperty(exports, "hexlify", { enumerable: true, get: function() {
      return bytes_1.hexlify;
    } });
    Object.defineProperty(exports, "hexStripZeros", { enumerable: true, get: function() {
      return bytes_1.hexStripZeros;
    } });
    Object.defineProperty(exports, "hexValue", { enumerable: true, get: function() {
      return bytes_1.hexValue;
    } });
    Object.defineProperty(exports, "hexZeroPad", { enumerable: true, get: function() {
      return bytes_1.hexZeroPad;
    } });
    Object.defineProperty(exports, "isBytes", { enumerable: true, get: function() {
      return bytes_1.isBytes;
    } });
    Object.defineProperty(exports, "isBytesLike", { enumerable: true, get: function() {
      return bytes_1.isBytesLike;
    } });
    Object.defineProperty(exports, "isHexString", { enumerable: true, get: function() {
      return bytes_1.isHexString;
    } });
    Object.defineProperty(exports, "joinSignature", { enumerable: true, get: function() {
      return bytes_1.joinSignature;
    } });
    Object.defineProperty(exports, "zeroPad", { enumerable: true, get: function() {
      return bytes_1.zeroPad;
    } });
    Object.defineProperty(exports, "splitSignature", { enumerable: true, get: function() {
      return bytes_1.splitSignature;
    } });
    Object.defineProperty(exports, "stripZeros", { enumerable: true, get: function() {
      return bytes_1.stripZeros;
    } });
    var hash_1 = (init_lib9(), __toCommonJS(lib_exports9));
    Object.defineProperty(exports, "_TypedDataEncoder", { enumerable: true, get: function() {
      return hash_1._TypedDataEncoder;
    } });
    Object.defineProperty(exports, "dnsEncode", { enumerable: true, get: function() {
      return hash_1.dnsEncode;
    } });
    Object.defineProperty(exports, "hashMessage", { enumerable: true, get: function() {
      return hash_1.hashMessage;
    } });
    Object.defineProperty(exports, "id", { enumerable: true, get: function() {
      return hash_1.id;
    } });
    Object.defineProperty(exports, "isValidName", { enumerable: true, get: function() {
      return hash_1.isValidName;
    } });
    Object.defineProperty(exports, "namehash", { enumerable: true, get: function() {
      return hash_1.namehash;
    } });
    var hdnode_1 = (init_lib15(), __toCommonJS(lib_exports15));
    Object.defineProperty(exports, "defaultPath", { enumerable: true, get: function() {
      return hdnode_1.defaultPath;
    } });
    Object.defineProperty(exports, "entropyToMnemonic", { enumerable: true, get: function() {
      return hdnode_1.entropyToMnemonic;
    } });
    Object.defineProperty(exports, "getAccountPath", { enumerable: true, get: function() {
      return hdnode_1.getAccountPath;
    } });
    Object.defineProperty(exports, "HDNode", { enumerable: true, get: function() {
      return hdnode_1.HDNode;
    } });
    Object.defineProperty(exports, "isValidMnemonic", { enumerable: true, get: function() {
      return hdnode_1.isValidMnemonic;
    } });
    Object.defineProperty(exports, "mnemonicToEntropy", { enumerable: true, get: function() {
      return hdnode_1.mnemonicToEntropy;
    } });
    Object.defineProperty(exports, "mnemonicToSeed", { enumerable: true, get: function() {
      return hdnode_1.mnemonicToSeed;
    } });
    var json_wallets_1 = (init_lib17(), __toCommonJS(lib_exports17));
    Object.defineProperty(exports, "getJsonWalletAddress", { enumerable: true, get: function() {
      return json_wallets_1.getJsonWalletAddress;
    } });
    var keccak256_1 = (init_lib4(), __toCommonJS(lib_exports4));
    Object.defineProperty(exports, "keccak256", { enumerable: true, get: function() {
      return keccak256_1.keccak256;
    } });
    var logger_1 = (init_lib(), __toCommonJS(lib_exports));
    Object.defineProperty(exports, "Logger", { enumerable: true, get: function() {
      return logger_1.Logger;
    } });
    var sha2_1 = (init_lib14(), __toCommonJS(lib_exports14));
    Object.defineProperty(exports, "computeHmac", { enumerable: true, get: function() {
      return sha2_1.computeHmac;
    } });
    Object.defineProperty(exports, "ripemd160", { enumerable: true, get: function() {
      return sha2_1.ripemd160;
    } });
    Object.defineProperty(exports, "sha256", { enumerable: true, get: function() {
      return sha2_1.sha256;
    } });
    Object.defineProperty(exports, "sha512", { enumerable: true, get: function() {
      return sha2_1.sha512;
    } });
    var solidity_1 = (init_lib20(), __toCommonJS(lib_exports20));
    Object.defineProperty(exports, "solidityKeccak256", { enumerable: true, get: function() {
      return solidity_1.keccak256;
    } });
    Object.defineProperty(exports, "solidityPack", { enumerable: true, get: function() {
      return solidity_1.pack;
    } });
    Object.defineProperty(exports, "soliditySha256", { enumerable: true, get: function() {
      return solidity_1.sha256;
    } });
    var random_1 = (init_lib16(), __toCommonJS(lib_exports16));
    Object.defineProperty(exports, "randomBytes", { enumerable: true, get: function() {
      return random_1.randomBytes;
    } });
    Object.defineProperty(exports, "shuffled", { enumerable: true, get: function() {
      return random_1.shuffled;
    } });
    var properties_1 = (init_lib3(), __toCommonJS(lib_exports3));
    Object.defineProperty(exports, "checkProperties", { enumerable: true, get: function() {
      return properties_1.checkProperties;
    } });
    Object.defineProperty(exports, "deepCopy", { enumerable: true, get: function() {
      return properties_1.deepCopy;
    } });
    Object.defineProperty(exports, "defineReadOnly", { enumerable: true, get: function() {
      return properties_1.defineReadOnly;
    } });
    Object.defineProperty(exports, "getStatic", { enumerable: true, get: function() {
      return properties_1.getStatic;
    } });
    Object.defineProperty(exports, "resolveProperties", { enumerable: true, get: function() {
      return properties_1.resolveProperties;
    } });
    Object.defineProperty(exports, "shallowCopy", { enumerable: true, get: function() {
      return properties_1.shallowCopy;
    } });
    var RLP = __importStar((init_lib5(), __toCommonJS(lib_exports5)));
    exports.RLP = RLP;
    var signing_key_1 = (init_lib11(), __toCommonJS(lib_exports11));
    Object.defineProperty(exports, "computePublicKey", { enumerable: true, get: function() {
      return signing_key_1.computePublicKey;
    } });
    Object.defineProperty(exports, "recoverPublicKey", { enumerable: true, get: function() {
      return signing_key_1.recoverPublicKey;
    } });
    Object.defineProperty(exports, "SigningKey", { enumerable: true, get: function() {
      return signing_key_1.SigningKey;
    } });
    var strings_1 = (init_lib7(), __toCommonJS(lib_exports7));
    Object.defineProperty(exports, "formatBytes32String", { enumerable: true, get: function() {
      return strings_1.formatBytes32String;
    } });
    Object.defineProperty(exports, "nameprep", { enumerable: true, get: function() {
      return strings_1.nameprep;
    } });
    Object.defineProperty(exports, "parseBytes32String", { enumerable: true, get: function() {
      return strings_1.parseBytes32String;
    } });
    Object.defineProperty(exports, "_toEscapedUtf8String", { enumerable: true, get: function() {
      return strings_1._toEscapedUtf8String;
    } });
    Object.defineProperty(exports, "toUtf8Bytes", { enumerable: true, get: function() {
      return strings_1.toUtf8Bytes;
    } });
    Object.defineProperty(exports, "toUtf8CodePoints", { enumerable: true, get: function() {
      return strings_1.toUtf8CodePoints;
    } });
    Object.defineProperty(exports, "toUtf8String", { enumerable: true, get: function() {
      return strings_1.toUtf8String;
    } });
    Object.defineProperty(exports, "Utf8ErrorFuncs", { enumerable: true, get: function() {
      return strings_1.Utf8ErrorFuncs;
    } });
    var transactions_1 = (init_lib12(), __toCommonJS(lib_exports12));
    Object.defineProperty(exports, "accessListify", { enumerable: true, get: function() {
      return transactions_1.accessListify;
    } });
    Object.defineProperty(exports, "computeAddress", { enumerable: true, get: function() {
      return transactions_1.computeAddress;
    } });
    Object.defineProperty(exports, "parseTransaction", { enumerable: true, get: function() {
      return transactions_1.parse;
    } });
    Object.defineProperty(exports, "recoverAddress", { enumerable: true, get: function() {
      return transactions_1.recoverAddress;
    } });
    Object.defineProperty(exports, "serializeTransaction", { enumerable: true, get: function() {
      return transactions_1.serialize;
    } });
    Object.defineProperty(exports, "TransactionTypes", { enumerable: true, get: function() {
      return transactions_1.TransactionTypes;
    } });
    var units_1 = (init_lib21(), __toCommonJS(lib_exports21));
    Object.defineProperty(exports, "commify", { enumerable: true, get: function() {
      return units_1.commify;
    } });
    Object.defineProperty(exports, "formatEther", { enumerable: true, get: function() {
      return units_1.formatEther;
    } });
    Object.defineProperty(exports, "parseEther", { enumerable: true, get: function() {
      return units_1.parseEther;
    } });
    Object.defineProperty(exports, "formatUnits", { enumerable: true, get: function() {
      return units_1.formatUnits;
    } });
    Object.defineProperty(exports, "parseUnits", { enumerable: true, get: function() {
      return units_1.parseUnits;
    } });
    var wallet_1 = (init_lib18(), __toCommonJS(lib_exports18));
    Object.defineProperty(exports, "verifyMessage", { enumerable: true, get: function() {
      return wallet_1.verifyMessage;
    } });
    Object.defineProperty(exports, "verifyTypedData", { enumerable: true, get: function() {
      return wallet_1.verifyTypedData;
    } });
    var web_1 = (init_lib19(), __toCommonJS(lib_exports19));
    Object.defineProperty(exports, "_fetchData", { enumerable: true, get: function() {
      return web_1._fetchData;
    } });
    Object.defineProperty(exports, "fetchJson", { enumerable: true, get: function() {
      return web_1.fetchJson;
    } });
    Object.defineProperty(exports, "poll", { enumerable: true, get: function() {
      return web_1.poll;
    } });
    var sha2_2 = (init_lib14(), __toCommonJS(lib_exports14));
    Object.defineProperty(exports, "SupportedAlgorithm", { enumerable: true, get: function() {
      return sha2_2.SupportedAlgorithm;
    } });
    var strings_2 = (init_lib7(), __toCommonJS(lib_exports7));
    Object.defineProperty(exports, "UnicodeNormalizationForm", { enumerable: true, get: function() {
      return strings_2.UnicodeNormalizationForm;
    } });
    Object.defineProperty(exports, "Utf8ErrorReason", { enumerable: true, get: function() {
      return strings_2.Utf8ErrorReason;
    } });
  }
});

// node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/ms/index.js"(exports, module) {
    init_process();
    init_buffer();
    var s = 1e3;
    var m = s * 60;
    var h = m * 60;
    var d = h * 24;
    var w = d * 7;
    var y = d * 365.25;
    module.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse(val);
      } else if (type === "number" && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        str
      );
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "weeks":
        case "week":
        case "w":
          return n * w;
        case "days":
        case "day":
        case "d":
          return n * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return Math.round(ms / d) + "d";
      }
      if (msAbs >= h) {
        return Math.round(ms / h) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s) {
        return Math.round(ms / s) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return plural(ms, msAbs, d, "day");
      }
      if (msAbs >= h) {
        return plural(ms, msAbs, h, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s) {
        return plural(ms, msAbs, s, "second");
      }
      return ms + " ms";
    }
    function plural(ms, msAbs, n, name) {
      var isPlural = msAbs >= n * 1.5;
      return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
    }
  }
});

// node_modules/debug/src/common.js
var require_common = __commonJS({
  "node_modules/debug/src/common.js"(exports, module) {
    init_process();
    init_buffer();
    function setup(env) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms();
      createDebug.destroy = destroy;
      Object.keys(env).forEach((key) => {
        createDebug[key] = env[key];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash = (hash << 5) - hash + namespace.charCodeAt(i);
          hash |= 0;
        }
        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug(...args) {
          if (!debug.enabled) {
            return;
          }
          const self = debug;
          const curr = Number(/* @__PURE__ */ new Date());
          const ms = curr - (prevTime || curr);
          self.diff = ms;
          self.prev = prevTime;
          self.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== "string") {
            args.unshift("%O");
          }
          let index = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
            if (match === "%%") {
              return "%";
            }
            index++;
            const formatter = createDebug.formatters[format];
            if (typeof formatter === "function") {
              const val = args[index];
              match = formatter.call(self, val);
              args.splice(index, 1);
              index--;
            }
            return match;
          });
          createDebug.formatArgs.call(self, args);
          const logFn = self.log || createDebug.log;
          logFn.apply(self, args);
        }
        debug.namespace = namespace;
        debug.useColors = createDebug.useColors();
        debug.color = createDebug.selectColor(namespace);
        debug.extend = extend;
        debug.destroy = createDebug.destroy;
        Object.defineProperty(debug, "enabled", {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          }
        });
        if (typeof createDebug.init === "function") {
          createDebug.init(debug);
        }
        return debug;
      }
      function extend(namespace, delimiter) {
        const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        let i;
        const split = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
        const len = split.length;
        for (i = 0; i < len; i++) {
          if (!split[i]) {
            continue;
          }
          namespaces = split[i].replace(/\*/g, ".*?");
          if (namespaces[0] === "-") {
            createDebug.skips.push(new RegExp("^" + namespaces.slice(1) + "$"));
          } else {
            createDebug.names.push(new RegExp("^" + namespaces + "$"));
          }
        }
      }
      function disable() {
        const namespaces = [
          ...createDebug.names.map(toNamespace),
          ...createDebug.skips.map(toNamespace).map((namespace) => "-" + namespace)
        ].join(",");
        createDebug.enable("");
        return namespaces;
      }
      function enabled(name) {
        if (name[name.length - 1] === "*") {
          return true;
        }
        let i;
        let len;
        for (i = 0, len = createDebug.skips.length; i < len; i++) {
          if (createDebug.skips[i].test(name)) {
            return false;
          }
        }
        for (i = 0, len = createDebug.names.length; i < len; i++) {
          if (createDebug.names[i].test(name)) {
            return true;
          }
        }
        return false;
      }
      function toNamespace(regexp) {
        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
      }
      function coerce(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module.exports = setup;
  }
});

// node_modules/debug/src/browser.js
var require_browser2 = __commonJS({
  "node_modules/debug/src/browser.js"(exports, module) {
    init_process();
    init_buffer();
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load;
    exports.useColors = useColors;
    exports.storage = localstorage();
    exports.destroy = (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
      };
    })();
    exports.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
        return true;
      }
      if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
      }
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
      typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
      typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c = "color: " + this.color;
      args.splice(1, 0, c, "color: inherit");
      let index = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === "%%") {
          return;
        }
        index++;
        if (match === "%c") {
          lastC = index;
        }
      });
      args.splice(lastC, 0, c);
    }
    exports.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        if (namespaces) {
          exports.storage.setItem("debug", namespaces);
        } else {
          exports.storage.removeItem("debug");
        }
      } catch (error) {
      }
    }
    function load() {
      let r;
      try {
        r = exports.storage.getItem("debug");
      } catch (error) {
      }
      if (!r && typeof process !== "undefined" && "env" in process) {
        r = process.env.DEBUG;
      }
      return r;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error) {
      }
    }
    module.exports = require_common()(exports);
    var { formatters } = module.exports;
    formatters.j = function(v) {
      try {
        return JSON.stringify(v);
      } catch (error) {
        return "[UnexpectedJSONParseError]: " + error.message;
      }
    };
  }
});

// node_modules/@biconomy/common/dist/src/ERC4337Utils.js
var require_ERC4337Utils = __commonJS({
  "node_modules/@biconomy/common/dist/src/ERC4337Utils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.deepHexlify = exports.rethrowError = exports.decodeErrorReason = exports.getUserOpHash = exports.packUserOp = exports.EIP1559_UNSUPPORTED_NETWORKS = exports.AddressZero = void 0;
    var utils_1 = require_utils();
    var ethers_1 = (init_lib22(), __toCommonJS(lib_exports22));
    var debug_1 = __importDefault(require_browser2());
    var debug = (0, debug_1.default)("aa.utils");
    exports.AddressZero = ethers_1.ethers.constants.AddressZero;
    exports.EIP1559_UNSUPPORTED_NETWORKS = [97, 56, 1442, 1101];
    function packUserOp(op, forSignature = true) {
      if (!op.initCode || !op.callData || !op.paymasterAndData)
        throw new Error("Missing userOp properties");
      if (forSignature) {
        return utils_1.defaultAbiCoder.encode([
          "address",
          "uint256",
          "bytes32",
          "bytes32",
          "uint256",
          "uint256",
          "uint256",
          "uint256",
          "uint256",
          "bytes32"
        ], [
          op.sender,
          op.nonce,
          (0, utils_1.keccak256)(op.initCode),
          (0, utils_1.keccak256)(op.callData),
          op.callGasLimit,
          op.verificationGasLimit,
          op.preVerificationGas,
          op.maxFeePerGas,
          op.maxPriorityFeePerGas,
          (0, utils_1.keccak256)(op.paymasterAndData)
        ]);
      } else {
        return utils_1.defaultAbiCoder.encode([
          "address",
          "uint256",
          "bytes",
          "bytes",
          "uint256",
          "uint256",
          "uint256",
          "uint256",
          "uint256",
          "bytes",
          "bytes"
        ], [
          op.sender,
          op.nonce,
          op.initCode,
          op.callData,
          op.callGasLimit,
          op.verificationGasLimit,
          op.preVerificationGas,
          op.maxFeePerGas,
          op.maxPriorityFeePerGas,
          op.paymasterAndData,
          op.signature
        ]);
      }
    }
    exports.packUserOp = packUserOp;
    function getUserOpHash(op, entryPoint, chainId) {
      const userOpHash = (0, utils_1.keccak256)(packUserOp(op, true));
      const enc = utils_1.defaultAbiCoder.encode(["bytes32", "address", "uint256"], [userOpHash, entryPoint, chainId]);
      return (0, utils_1.keccak256)(enc);
    }
    exports.getUserOpHash = getUserOpHash;
    var ErrorSig = (0, utils_1.keccak256)(Buffer.from("Error(string)")).slice(0, 10);
    var FailedOpSig = (0, utils_1.keccak256)(Buffer.from("FailedOp(uint256,address,string)")).slice(0, 10);
    function decodeErrorReason(error) {
      debug("decoding", error);
      if (error.startsWith(ErrorSig)) {
        const [message] = utils_1.defaultAbiCoder.decode(["string"], "0x" + error.substring(10));
        return { message };
      } else if (error.startsWith(FailedOpSig)) {
        const resultSet = utils_1.defaultAbiCoder.decode(["uint256", "address", "string"], "0x" + error.substring(10));
        let [paymaster, message] = resultSet;
        const [opIndex] = resultSet;
        message = `FailedOp: ${message}`;
        if (paymaster.toString() !== ethers_1.ethers.constants.AddressZero) {
          message = `${message} (paymaster ${paymaster})`;
        } else {
          paymaster = void 0;
        }
        return {
          message,
          opIndex,
          paymaster
        };
      }
      return void 0;
    }
    exports.decodeErrorReason = decodeErrorReason;
    function rethrowError(e) {
      let error = e;
      let parent = e;
      if ((error === null || error === void 0 ? void 0 : error.error) != null) {
        error = error.error;
      }
      while ((error === null || error === void 0 ? void 0 : error.data) != null) {
        parent = error;
        error = error.data;
      }
      const decoded = typeof error === "string" && error.length > 2 ? decodeErrorReason(error) : void 0;
      if (decoded != null) {
        e.message = decoded.message;
        if (decoded.opIndex != null) {
          const errorWithMsg = (0, utils_1.hexConcat)([
            ErrorSig,
            utils_1.defaultAbiCoder.encode(["string"], [decoded.message])
          ]);
          parent.data = errorWithMsg;
        }
      }
      throw e;
    }
    exports.rethrowError = rethrowError;
    function deepHexlify(obj) {
      if (typeof obj === "function") {
        return void 0;
      }
      if (obj == null || typeof obj === "string" || typeof obj === "boolean") {
        return obj;
      } else if (obj._isBigNumber != null || typeof obj !== "object") {
        return (0, utils_1.hexlify)(obj).replace(/^0x0/, "0x");
      }
      if (Array.isArray(obj)) {
        return obj.map((member) => deepHexlify(member));
      }
      return Object.keys(obj).reduce((set, key) => ({
        ...set,
        [key]: deepHexlify(obj[key])
      }), {});
    }
    exports.deepHexlify = deepHexlify;
  }
});

// node_modules/@biconomy/common/dist/src/Logger.js
var require_Logger = __commonJS({
  "node_modules/@biconomy/common/dist/src/Logger.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Logger = void 0;
    var Logger = class _Logger {
      /**
       * \x1b[0m is an escape sequence to reset the color of the text
       * All color codes used - 31 - Red, 33 - Yellow, 34 - Blue, 35 - Magenta, 36 - Cyan
       * log -   Magenta[time]               Cyan[message]:  [value]
       * warn -  Magenta[time] Yellow[WARN]: Cyan[message]:  [value]
       * error - Magenta[time] Red[ERROR]:   Cyan[message]:  [value]
       */
      /* eslint-disable  @typescript-eslint/no-explicit-any */
      static log(message, value) {
        const timestamp = (/* @__PURE__ */ new Date()).toISOString();
        const logMessage = `\x1B[35m[${timestamp}]\x1B[0m \x1B[36m${message}\x1B[0m:`;
        if (_Logger.isDebug) {
          console.log(logMessage, value === void 0 ? "" : value);
        }
      }
      /* eslint-disable  @typescript-eslint/no-explicit-any */
      static warn(message, value) {
        const timestamp = (/* @__PURE__ */ new Date()).toISOString();
        const warnMessage = `\x1B[35m[${timestamp}]\x1B[0m \x1B[33mWARN\x1B[0m: \x1B[36m${message}\x1B[0m`;
        if (_Logger.isDebug) {
          console.warn(warnMessage, value === void 0 ? "" : value);
        }
      }
      /* eslint-disable  @typescript-eslint/no-explicit-any */
      static error(message, value) {
        const timestamp = (/* @__PURE__ */ new Date()).toISOString();
        const errorMessage = `\x1B[35m[${timestamp}]\x1B[0m \x1B[31mERROR\x1B[0m: \x1B[36m${message}\x1B[0m`;
        if (_Logger.isDebug) {
          console.error(errorMessage, value === void 0 ? "" : value);
        }
      }
    };
    exports.Logger = Logger;
    Logger.isDebug = process.env.BICONOMY_SDK_DEBUG === "true" ? true : process.env.REACT_APP_BICONOMY_SDK_DEBUG === "true" ? true : false;
  }
});

// node_modules/@biconomy/common/dist/src/httpRequests.js
var require_httpRequests = __commonJS({
  "node_modules/@biconomy/common/dist/src/httpRequests.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sendRequest = exports.HttpMethod = void 0;
    var node_fetch_1 = __importDefault(require_browser());
    var Logger_1 = require_Logger();
    var HttpMethod;
    (function(HttpMethod2) {
      HttpMethod2["Get"] = "get";
      HttpMethod2["Post"] = "post";
      HttpMethod2["Delete"] = "delete";
    })(HttpMethod = exports.HttpMethod || (exports.HttpMethod = {}));
    async function sendRequest({ url, method, body, headers = {} }) {
      const response = await (0, node_fetch_1.default)(url, {
        method,
        headers: {
          ...headers,
          Accept: "application/json",
          "Content-Type": "application/json"
        },
        body: JSON.stringify(body)
      });
      let jsonResponse;
      try {
        jsonResponse = await response.json();
      } catch (error) {
        if (!response.ok) {
          throw new Error(response.statusText);
        }
      }
      Logger_1.Logger.log("jsonRpc response ", jsonResponse);
      if (response.ok) {
        if (jsonResponse && jsonResponse.hasOwnProperty("result")) {
          return jsonResponse;
        }
      }
      const errorObject = { code: response.status, message: response.statusText };
      if (jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.error) {
        if (typeof jsonResponse.error === "string") {
          const error = jsonResponse.error;
          errorObject.code = response.status;
          errorObject.message = error;
          throw errorObject;
        } else if (typeof jsonResponse.error === "object") {
          const error = jsonResponse.error;
          errorObject.code = error === null || error === void 0 ? void 0 : error.code;
          errorObject.message = error === null || error === void 0 ? void 0 : error.message;
          throw errorObject;
        }
      }
      if (jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.message) {
        errorObject.message = jsonResponse.message;
        throw errorObject;
      }
      if (jsonResponse === null || jsonResponse === void 0 ? void 0 : jsonResponse.msg) {
        errorObject.message = jsonResponse.msg;
        throw errorObject;
      }
      throw new Error("Unknown Error: Raise an issue here https://github.com/bcnmy/biconomy-client-sdk/issues with reproduction steps");
    }
    exports.sendRequest = sendRequest;
  }
});

// node_modules/@biconomy/common/dist/src/typechain/factories/EntryPoint_v100__factory.js
var require_EntryPoint_v100_factory = __commonJS({
  "node_modules/@biconomy/common/dist/src/typechain/factories/EntryPoint_v100__factory.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EntryPoint_v100__factory = void 0;
    var ethers_1 = (init_lib22(), __toCommonJS(lib_exports22));
    var _abi = [
      {
        inputs: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "paid",
            type: "uint256"
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48"
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48"
          },
          {
            internalType: "bool",
            name: "targetSuccess",
            type: "bool"
          },
          {
            internalType: "bytes",
            name: "targetResult",
            type: "bytes"
          }
        ],
        name: "ExecutionResult",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "opIndex",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "reason",
            type: "string"
          }
        ],
        name: "FailedOp",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "sender",
            type: "address"
          }
        ],
        name: "SenderAddressResult",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address"
          }
        ],
        name: "SignatureValidationFailed",
        type: "error"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "uint256",
                name: "preOpGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "prefund",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "sigFailed",
                type: "bool"
              },
              {
                internalType: "uint48",
                name: "validAfter",
                type: "uint48"
              },
              {
                internalType: "uint48",
                name: "validUntil",
                type: "uint48"
              },
              {
                internalType: "bytes",
                name: "paymasterContext",
                type: "bytes"
              }
            ],
            internalType: "struct IEntryPoint.ReturnInfo",
            name: "returnInfo",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256"
              }
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "senderInfo",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256"
              }
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "factoryInfo",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256"
              }
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "paymasterInfo",
            type: "tuple"
          }
        ],
        name: "ValidationResult",
        type: "error"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "uint256",
                name: "preOpGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "prefund",
                type: "uint256"
              },
              {
                internalType: "bool",
                name: "sigFailed",
                type: "bool"
              },
              {
                internalType: "uint48",
                name: "validAfter",
                type: "uint48"
              },
              {
                internalType: "uint48",
                name: "validUntil",
                type: "uint48"
              },
              {
                internalType: "bytes",
                name: "paymasterContext",
                type: "bytes"
              }
            ],
            internalType: "struct IEntryPoint.ReturnInfo",
            name: "returnInfo",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256"
              }
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "senderInfo",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256"
              }
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "factoryInfo",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256"
              }
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "paymasterInfo",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "address",
                name: "aggregator",
                type: "address"
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "stake",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "unstakeDelaySec",
                    type: "uint256"
                  }
                ],
                internalType: "struct IStakeManager.StakeInfo",
                name: "stakeInfo",
                type: "tuple"
              }
            ],
            internalType: "struct IEntryPoint.AggregatorStakeInfo",
            name: "aggregatorInfo",
            type: "tuple"
          }
        ],
        name: "ValidationResultWithAggregation",
        type: "error"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32"
          },
          {
            indexed: true,
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "factory",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "paymaster",
            type: "address"
          }
        ],
        name: "AccountDeployed",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [],
        name: "BeforeExecution",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "totalDeposit",
            type: "uint256"
          }
        ],
        name: "Deposited",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "aggregator",
            type: "address"
          }
        ],
        name: "SignatureAggregatorChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "totalStaked",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256"
          }
        ],
        name: "StakeLocked",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "withdrawTime",
            type: "uint256"
          }
        ],
        name: "StakeUnlocked",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "withdrawAddress",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "StakeWithdrawn",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32"
          },
          {
            indexed: true,
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "paymaster",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "bool",
            name: "success",
            type: "bool"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "actualGasCost",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "actualGasUsed",
            type: "uint256"
          }
        ],
        name: "UserOperationEvent",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32"
          },
          {
            indexed: true,
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "bytes",
            name: "revertReason",
            type: "bytes"
          }
        ],
        name: "UserOperationRevertReason",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "withdrawAddress",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "Withdrawn",
        type: "event"
      },
      {
        inputs: [],
        name: "SIG_VALIDATION_FAILED",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes"
          },
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes"
          }
        ],
        name: "_validateSenderAndPaymaster",
        outputs: [],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32"
          }
        ],
        name: "addStake",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "account",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "account",
            type: "address"
          }
        ],
        name: "depositTo",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "deposits",
        outputs: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112"
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool"
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112"
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32"
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "account",
            type: "address"
          }
        ],
        name: "getDepositInfo",
        outputs: [
          {
            components: [
              {
                internalType: "uint112",
                name: "deposit",
                type: "uint112"
              },
              {
                internalType: "bool",
                name: "staked",
                type: "bool"
              },
              {
                internalType: "uint112",
                name: "stake",
                type: "uint112"
              },
              {
                internalType: "uint32",
                name: "unstakeDelaySec",
                type: "uint32"
              },
              {
                internalType: "uint48",
                name: "withdrawTime",
                type: "uint48"
              }
            ],
            internalType: "struct IStakeManager.DepositInfo",
            name: "info",
            type: "tuple"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "uint192",
            name: "key",
            type: "uint192"
          }
        ],
        name: "getNonce",
        outputs: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes"
          }
        ],
        name: "getSenderAddress",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes"
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes"
              }
            ],
            internalType: "struct UserOperation",
            name: "userOp",
            type: "tuple"
          }
        ],
        name: "getUserOpHash",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "sender",
                    type: "address"
                  },
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256"
                  },
                  {
                    internalType: "bytes",
                    name: "initCode",
                    type: "bytes"
                  },
                  {
                    internalType: "bytes",
                    name: "callData",
                    type: "bytes"
                  },
                  {
                    internalType: "uint256",
                    name: "callGasLimit",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "verificationGasLimit",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "preVerificationGas",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "maxFeePerGas",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "maxPriorityFeePerGas",
                    type: "uint256"
                  },
                  {
                    internalType: "bytes",
                    name: "paymasterAndData",
                    type: "bytes"
                  },
                  {
                    internalType: "bytes",
                    name: "signature",
                    type: "bytes"
                  }
                ],
                internalType: "struct UserOperation[]",
                name: "userOps",
                type: "tuple[]"
              },
              {
                internalType: "contract IAggregator",
                name: "aggregator",
                type: "address"
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes"
              }
            ],
            internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
            name: "opsPerAggregator",
            type: "tuple[]"
          },
          {
            internalType: "address payable",
            name: "beneficiary",
            type: "address"
          }
        ],
        name: "handleAggregatedOps",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes"
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes"
              }
            ],
            internalType: "struct UserOperation[]",
            name: "ops",
            type: "tuple[]"
          },
          {
            internalType: "address payable",
            name: "beneficiary",
            type: "address"
          }
        ],
        name: "handleOps",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint192",
            name: "key",
            type: "uint192"
          }
        ],
        name: "incrementNonce",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes"
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "sender",
                    type: "address"
                  },
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "callGasLimit",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "verificationGasLimit",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "preVerificationGas",
                    type: "uint256"
                  },
                  {
                    internalType: "address",
                    name: "paymaster",
                    type: "address"
                  },
                  {
                    internalType: "uint256",
                    name: "maxFeePerGas",
                    type: "uint256"
                  },
                  {
                    internalType: "uint256",
                    name: "maxPriorityFeePerGas",
                    type: "uint256"
                  }
                ],
                internalType: "struct EntryPoint.MemoryUserOp",
                name: "mUserOp",
                type: "tuple"
              },
              {
                internalType: "bytes32",
                name: "userOpHash",
                type: "bytes32"
              },
              {
                internalType: "uint256",
                name: "prefund",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "contextOffset",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "preOpGas",
                type: "uint256"
              }
            ],
            internalType: "struct EntryPoint.UserOpInfo",
            name: "opInfo",
            type: "tuple"
          },
          {
            internalType: "bytes",
            name: "context",
            type: "bytes"
          }
        ],
        name: "innerHandleOp",
        outputs: [
          {
            internalType: "uint256",
            name: "actualGasCost",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint192",
            name: "",
            type: "uint192"
          }
        ],
        name: "nonceSequenceNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes"
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes"
              }
            ],
            internalType: "struct UserOperation",
            name: "op",
            type: "tuple"
          },
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "targetCallData",
            type: "bytes"
          }
        ],
        name: "simulateHandleOp",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes"
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes"
              }
            ],
            internalType: "struct UserOperation",
            name: "userOp",
            type: "tuple"
          }
        ],
        name: "simulateValidation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "unlockStake",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address payable",
            name: "withdrawAddress",
            type: "address"
          }
        ],
        name: "withdrawStake",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address payable",
            name: "withdrawAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "withdrawAmount",
            type: "uint256"
          }
        ],
        name: "withdrawTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        stateMutability: "payable",
        type: "receive"
      }
    ];
    var _bytecode = "0x60a080604052346200008957600160025561022c8181016001600160401b038111838210176200007357829162005d18833903906000f080156200006757608052604051615c8990816200008f82396080518181816113df01528181613e9501526141b60152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b610021615531565b005b60003560e01c80630396cb60146101b35780630bd28e3b146101aa5780631b2e01b8146101a15780631d732756146101985780631fad948c1461018f578063205c28781461018657806335567e1a1461017d5780634b1d7cf5146101745780635287ce121461016b57806370a08231146101625780638f41ec5a14610159578063957122ab146101505780639b249f6914610147578063a61935311461013e578063b760faf914610135578063bb9fe6bf1461012c578063c23a5cea14610123578063d6383f941461011a578063ee219423146101115763fc7e286d0361000e5761010c611bcd565b61000e565b5061010c6119b5565b5061010c61184d565b5061010c6116b4565b5061010c611536565b5061010c6114f7565b5061010c6114d6565b5061010c611337565b5061010c611164565b5061010c611129565b5061010c6110a4565b5061010c610f54565b5061010c610bf8565b5061010c610b33565b5061010c610994565b5061010c6108ba565b5061010c6106e7565b5061010c610467565b5061010c610385565b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595760043563ffffffff8116808203610359576103547fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01916102716102413373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9161024d811515615697565b61026a610261600185015463ffffffff1690565b63ffffffff1690565b11156156fc565b54926103366dffffffffffffffffffffffffffff946102f461029834888460781c166121d5565b966102a4881515615761565b6102b0818911156157c6565b6102d4816102bc6105ec565b941684906dffffffffffffffffffffffffffff169052565b6001602084015287166dffffffffffffffffffffffffffff166040830152565b63ffffffff83166060820152600060808201526103313373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61582b565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b6024359077ffffffffffffffffffffffffffffffffffffffffffffffff8216820361035957565b50346103595760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595760043577ffffffffffffffffffffffffffffffffffffffffffffffff81168103610359576104149033600052600160205260406000209077ffffffffffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b61041e8154612491565b9055005b73ffffffffffffffffffffffffffffffffffffffff81160361035957565b6024359061044d82610422565b565b60c4359061044d82610422565b359061044d82610422565b50346103595760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595760206104fc6004356104a881610422565b73ffffffffffffffffffffffffffffffffffffffff6104c561035e565b91166000526001835260406000209077ffffffffffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54604051908152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761055157604052565b610559610505565b604052565b610100810190811067ffffffffffffffff82111761055157604052565b67ffffffffffffffff811161055157604052565b6060810190811067ffffffffffffffff82111761055157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761055157604052565b6040519061044d82610535565b6040519060c0820182811067ffffffffffffffff82111761055157604052565b604051906040820182811067ffffffffffffffff82111761055157604052565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610675575b01160190565b61067d610505565b61066f565b92919261068e82610639565b9161069c60405193846105ab565b829481845281830111610359578281602093846000960137010152565b9181601f840112156103595782359167ffffffffffffffff8311610359576020838186019501011161035957565b5034610359576101c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595767ffffffffffffffff60043581811161035957366023820112156103595761074a903690602481600401359101610682565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc36016101808112610359576101006040519161078783610535565b12610359576040516107988161055e565b6107a0610440565b815260443560208201526064356040820152608435606082015260a43560808201526107ca61044f565b60a082015260e43560c08201526101043560e082015281526101243560208201526101443560408201526101643560608201526101843560808201526101a4359182116103595761083e9261082661082e9336906004016106b9565b9290916128b1565b6040519081529081906020820190565b0390f35b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126103595760043567ffffffffffffffff9283821161035957806023830112156103595781600401359384116103595760248460051b830101116103595760240191906024356108b781610422565b90565b5034610359576108c936610842565b6108d4929192611e3a565b6108dd83611d2d565b60005b84811061095d57506000927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728480a183915b85831061092d576109238585611ed7565b6100216001600255565b909193600190610953610941878987611dec565b61094b8886611dca565b51908861233f565b0194019190610912565b8061098b610984610972600194869896611dca565b5161097e848a88611dec565b84613448565b9083612f30565b019290926108e0565b50346103595760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610359576004356109d081610422565b6024359060009133835282602052604083206dffffffffffffffffffffffffffff81541692838311610ad557848373ffffffffffffffffffffffffffffffffffffffff829593610a788496610a3f610a2c8798610ad29c6121c0565b6dffffffffffffffffffffffffffff1690565b6dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b6040805173ffffffffffffffffffffffffffffffffffffffff831681526020810185905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a2165af1610acc611ea7565b50615ba2565b80f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152fd5b50346103595760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610359576020600435610b7181610422565b73ffffffffffffffffffffffffffffffffffffffff610b8e61035e565b911660005260018252610bc98160406000209077ffffffffffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000006040519260401b16178152f35b503461035957610c0736610842565b610c0f611e3a565b6000805b838210610df657610c249150611d2d565b7fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972600080a16000805b848110610d5c57505060008093815b818110610c9357610923868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a2611ed7565b610cf7610ca182848a6124cb565b610ccc610cb3610cb36020840161256d565b73ffffffffffffffffffffffffffffffffffffffff1690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d600080a280612519565b906000915b808310610d1457505050610d0f90612491565b610c5c565b90919497610d4f610d49610d5592610d438c8b610d3c82610d368e8b8d611dec565b92611dca565b519161233f565b906121d5565b99612491565b95612491565b9190610cfc565b610d678186886124cb565b6020610d7f610d768380612519565b9290930161256d565b9173ffffffffffffffffffffffffffffffffffffffff60009316905b828410610db45750505050610daf90612491565b610c4d565b90919294610d4f81610de985610de2610dd0610dee968d611dca565b51610ddc8c8b8a611dec565b85613448565b908b613148565b612491565b929190610d9b565b610e018285876124cb565b90610e0c8280612519565b92610e1c610cb36020830161256d565b9173ffffffffffffffffffffffffffffffffffffffff8316610e416001821415612577565b610e62575b505050610e5c91610e56916121d5565b91612491565b90610c13565b909592610e7b6040999693999895989788810190611fc8565b92908a3b156103595789938b918a5193849283927fe3563a4f00000000000000000000000000000000000000000000000000000000845260049e8f850193610ec294612711565b03815a93600094fa9081610f3b575b50610f255786517f86a9f75000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16818a0190815281906020010390fd5b0390fd5b9497509295509093509181610e56610e5c610e46565b80610f48610f4e9261057b565b8061111e565b38610ed1565b50346103595760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595761083e73ffffffffffffffffffffffffffffffffffffffff600435610fa881610422565b608060409283928351610fba81610535565b60009381858093528260208201528287820152826060820152015216815280602052209061104965ffffffffffff6001835194610ff686610535565b80546dffffffffffffffffffffffffffff8082168852607082901c60ff161515602089015260789190911c1685870152015463ffffffff8116606086015260201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a08401956dffffffffffffffffffffffffffff808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b50346103595760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595773ffffffffffffffffffffffffffffffffffffffff6004356110f581610422565b16600052600060205260206dffffffffffffffffffffffffffff60406000205416604051908152f35b600091031261035957565b50346103595760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035957602060405160018152f35b50346103595760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261035957600467ffffffffffffffff8135818111610359576111b590369084016106b9565b9050602435916111c483610422565b604435908111610359576111db90369085016106b9565b92909115908161132d575b506112c6576014821015611236575b610f21836040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160409060208152600060208201520190565b6112466112529261124c92612b88565b90612b96565b60601c90565b3b1561125f5738806111f5565b610f21906040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b610f21836040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601960208201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060408201520190565b90503b15386111e6565b50346103595760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595760043567ffffffffffffffff81116103595761138960249136906004016106b9565b906113bf6040519283927f570e1a3600000000000000000000000000000000000000000000000000000000845260048401612d2c565b0360208273ffffffffffffffffffffffffffffffffffffffff92816000857f0000000000000000000000000000000000000000000000000000000000000000165af1918215611471575b600092611441575b50604051917f6ca7b806000000000000000000000000000000000000000000000000000000008352166004820152fd5b61146391925060203d811161146a575b61145b81836105ab565b810190612d17565b9038611411565b503d611451565b611479612183565b611409565b90816101609103126103595790565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc820112610359576004359067ffffffffffffffff8211610359576108b79160040161147e565b50346103595760206114ef6114ea3661148d565b612a0c565b604051908152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595761002160043561153181610422565b61562b565b5034610359576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126116b1573381528060205260408120600181019063ffffffff825416908115611653576115f06115b5611618936115a76115a2855460ff9060701c1690565b61598f565b65ffffffffffff42166159f4565b84547fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff16602082901b69ffffffffffff000000001617909455565b7fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff8154169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a280f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152fd5b80fd5b50346103595760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610359576004356116f081610422565b610ad273ffffffffffffffffffffffffffffffffffffffff6117323373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b926117ea611755610a2c86546dffffffffffffffffffffffffffff9060781c1690565b94611761861515615a0e565b6117c26001820161179a65ffffffffffff611786835465ffffffffffff9060201c1690565b16611792811515615a73565b421015615ad8565b80547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055565b7fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff8154169055565b6040805173ffffffffffffffffffffffffffffffffffffffff831681526020810186905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a2600080809581948294165af1611847611ea7565b50615b3d565b50346103595760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595767ffffffffffffffff6004358181116103595761189e90369060040161147e565b602435916118ab83610422565b604435908111610359576118c6610f219136906004016106b9565b6118ce611caa565b6118d785612e2b565b6118ea6118e48287613240565b906153ba565b946118fa826000924384526121e2565b96438252819360609573ffffffffffffffffffffffffffffffffffffffff8316611981575b50505050608001519361194e6040611940602084015165ffffffffffff1690565b92015165ffffffffffff1690565b906040519687967f8b7ac980000000000000000000000000000000000000000000000000000000008852600488016127e1565b8395508394965061199b60409492939451809481936127d3565b03925af19060806119aa611ea7565b92919038808061191f565b5034610359576119c43661148d565b6119cc611caa565b6119d582612e2b565b6119df8183613240565b825160a00151919391611a0c9073ffffffffffffffffffffffffffffffffffffffff166154dc565b6154dc565b90611a30611a07855173ffffffffffffffffffffffffffffffffffffffff90511690565b94611a39612b50565b50611a68611a4c60409586810190611fc8565b90600060148310611bc55750611246611a079261124c92612b88565b91611a72916153ba565b805173ffffffffffffffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff821660018114916080880151978781015191886020820151611ac79065ffffffffffff1690565b91015165ffffffffffff16916060015192611ae06105f9565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a088015215159081611bbc575b50611b515750610f2192519485947fe0cff05f00000000000000000000000000000000000000000000000000000000865260048601612cbd565b9190610f2193611b60846154dc565b611b87611b6b610619565b73ffffffffffffffffffffffffffffffffffffffff9096168652565b6020850152519586957ffaecb4e400000000000000000000000000000000000000000000000000000000875260048701612c2b565b90501538611b17565b9150506154dc565b50346103595760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103595773ffffffffffffffffffffffffffffffffffffffff600435611c1e81610422565b16600052600060205260a0604060002065ffffffffffff60018254920154604051926dffffffffffffffffffffffffffff90818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b60209067ffffffffffffffff8111611c9d575b60051b0190565b611ca5610505565b611c96565b60405190611cb782610535565b604051608083610100830167ffffffffffffffff811184821017611d20575b60405260009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b611d28610505565b611cd6565b90611d3782611c83565b611d4460405191826105ab565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611d728294611c83565b019060005b828110611d8357505050565b602090611d8e611caa565b82828501015201611d77565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020918151811015611ddf575b60051b010190565b611de7611d9a565b611dd7565b9190811015611e2d575b60051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea181360301821215610359570190565b611e35611d9a565b611df6565b6002805414611e495760028055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b3d15611ed2573d90611eb882610639565b91611ec660405193846105ab565b82523d6000602084013e565b606090565b73ffffffffffffffffffffffffffffffffffffffff168015611f6a57600080809381935af1611f04611ea7565b5015611f0c57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610359570180359067ffffffffffffffff82116103595760200191813603831361035957565b90816020910312610359575190565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b60005b83811061207a5750506000910152565b818101518382015260200161206a565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936120c681518092818752878088019101612067565b0116010190565b906120e76080916108b796946101c0808652850191612028565b9360e0815173ffffffffffffffffffffffffffffffffffffffff80825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a081840391015261208a565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082039182116121cd57565b61044d612190565b919082018092116121cd57565b905a918160206121fb6060830151936060810190611fc8565b906122348560405195869485947f1d732756000000000000000000000000000000000000000000000000000000008652600486016120cd565b03816000305af16000918161230f575b50612308575060206000803e7fdeaddead000000000000000000000000000000000000000000000000000000006000511461229b5761229561228a6108b7945a906121c0565b6080840151906121d5565b91614afc565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b9250505090565b61233191925060203d8111612338575b61232981836105ab565b810190612019565b9038612244565b503d61231f565b909291925a9380602061235b6060830151946060810190611fc8565b906123948660405195869485947f1d732756000000000000000000000000000000000000000000000000000000008652600486016120cd565b03816000305af160009181612471575b5061246a575060206000803e7fdeaddead00000000000000000000000000000000000000000000000000000000600051146123fc576123f66123eb6108b795965a906121c0565b6080830151906121d5565b92614ddf565b610f21836040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b9450505050565b61248a91925060203d81116123385761232981836105ab565b90386123a4565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146124bf570190565b6124c7612190565b0190565b919081101561250c575b60051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa181360301821215610359570190565b612514611d9a565b6124d5565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610359570180359067ffffffffffffffff821161035957602001918160051b3603831361035957565b356108b781610422565b1561257e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561035957016020813591019167ffffffffffffffff821161035957813603831361035957565b6108b7916126578161263d8461045c565b73ffffffffffffffffffffffffffffffffffffffff169052565b602082013560208201526126f26126a361268861267760408601866125dc565b610160806040880152860191612028565b61269560608601866125dc565b908583036060870152612028565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e084015261010080850135908401526101206126e5818601866125dc565b9185840390860152612028565b9161270361014091828101906125dc565b929091818503910152612028565b949391929083604087016040885252606086019360608160051b8801019482600090815b848310612754575050505050508460206108b795968503910152612028565b9091929394977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08b820301855288357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea1843603018112156127cf57600191846127bd920161262c565b98602090810196950193019190612735565b8280fd5b908092918237016000815290565b9290936108b796959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a0820152019061208a565b1561282457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152fd5b9060406108b79260008152816020820152019061208a565b6040906108b793928152816020820152019061208a565b909291925a936128c230331461281d565b8151946040860151955a6113886060830151890101116129e2576108b7966000958051612909575b50505090612903915a9003608084015101943691610682565b91615047565b612938916129349161292f855173ffffffffffffffffffffffffffffffffffffffff1690565b615c12565b1590565b612944575b80806128ea565b61290392919450612953615c24565b908151612967575b5050600193909161293d565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a20173ffffffffffffffffffffffffffffffffffffffff6020870151926129d860206129c6835173ffffffffffffffffffffffffffffffffffffffff1690565b9201519560405193849316968361289a565b0390a3388061295b565b7fdeaddead0000000000000000000000000000000000000000000000000000000060005260206000fd5b612a22612a1c6040830183611fc8565b90615c07565b90612a33612a1c6060830183611fc8565b90612ae9612a48612a1c610120840184611fc8565b60405194859360208501956101008201359260e08301359260c08101359260a08201359260808301359273ffffffffffffffffffffffffffffffffffffffff60208201359135168c9693909a9998959261012098959273ffffffffffffffffffffffffffffffffffffffff6101408a019d168952602089015260408801526060870152608086015260a085015260c084015260e08301526101008201520152565b0391612b1b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938481018352826105ab565b51902060408051602081019283523091810191909152466060820152608092830181529091612b4a90826105ab565b51902090565b604051906040820182811067ffffffffffffffff821117612b7b575b60405260006020838281520152565b612b83610505565b612b6c565b906014116103595790601490565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009035818116939260148110612bcb57505050565b60140360031b82901b16169150565b9060c060a06108b793805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a0820152019061208a565b9294612c8c61044d95612c7a610100959998612c68612c54602097610140808c528b0190612bda565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b73ffffffffffffffffffffffffffffffffffffffff81511660e0850152015191019060208091805184520151910152565b612d0661044d94612cf4612cdf60a0959998969960e0865260e0860190612bda565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b9081602091031261035957516108b781610422565b9160206108b7938181520191612028565b90612d6c73ffffffffffffffffffffffffffffffffffffffff916108b797959694606085526060850191612028565b941660208201526040818503910152612028565b60009060033d11612d8d57565b905060046000803e60005160e01c90565b600060443d106108b7576040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc91823d016004833e815167ffffffffffffffff918282113d602484011117612e1a57818401948551938411612e22573d85010160208487010111612e1a57506108b7929101602001906105ab565b949350505050565b50949350505050565b612e386040820182611fc8565b612e50612e448461256d565b93610120810190611fc8565b9290303b1561035957600093612e949160405196879586957f957122ab00000000000000000000000000000000000000000000000000000000875260048701612d3d565b0381305afa9081612f1d575b5061044d576001612eaf612d80565b6308c379a014612ec8575b612ec057565b61044d612183565b612ed0612d9e565b80612edc575b50612eba565b80516000925015612ed657610f21906040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301612882565b80610f48612f2a9261057b565b38612ea0565b9190612f3b9061317f565b73ffffffffffffffffffffffffffffffffffffffff929183166130da5761306c57612f659061317f565b9116612ffe57612f725750565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a490fd5b610f21826040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601460408201527f41413334207369676e6174757265206572726f7200000000000000000000000060608201520190565b610f21836040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601760408201527f414132322065787069726564206f72206e6f742064756500000000000000000060608201520190565b610f21846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601460408201527f41413234207369676e6174757265206572726f7200000000000000000000000060608201520190565b9291906131549061317f565b909273ffffffffffffffffffffffffffffffffffffffff808095169116036130da5761306c57612f65905b80156131d25761318e9061535f565b73ffffffffffffffffffffffffffffffffffffffff65ffffffffffff8060408401511642119081156131c2575b5091511691565b90506020830151164210386131bb565b50600090600090565b156131e257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152fd5b916000915a9381519061325382826136b3565b61325c81612a0c565b602084015261329a6effffffffffffffffffffffffffffff60808401516060850151176040850151176101008401359060e0850135171711156131db565b6132a382613775565b6132ae818584613836565b97906132df6129346132d4875173ffffffffffffffffffffffffffffffffffffffff1690565b60208801519061546c565b6133db576132ec43600052565b73ffffffffffffffffffffffffffffffffffffffff61332460a0606097015173ffffffffffffffffffffffffffffffffffffffff1690565b166133c1575b505a810360a0840135106133545760809360c092604087015260608601525a900391013501910152565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601e60408201527f41413430206f76657220766572696669636174696f6e4761734c696d6974000060608201520190565b909350816133d2929750858461455c565b9590923861332a565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601a60408201527f4141323520696e76616c6964206163636f756e74206e6f6e636500000000000060608201520190565b9290916000925a825161345b81846136b3565b61346483612a0c565b60208501526134a26effffffffffffffffffffffffffffff60808301516060840151176040840151176101008601359060e0870135171711156131db565b6134ab81613775565b6134b78186868b613ba2565b98906134e86129346134dd865173ffffffffffffffffffffffffffffffffffffffff1690565b60208701519061546c565b6135e0576134f543600052565b73ffffffffffffffffffffffffffffffffffffffff61352d60a0606096015173ffffffffffffffffffffffffffffffffffffffff1690565b166135c5575b505a840360a08601351061355f5750604085015260608401526080919060c0905a900391013501910152565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b909250816135d79298508686856147ef565b96909138613533565b610f21826040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601a60408201527f4141323520696e76616c6964206163636f756e74206e6f6e636500000000000060608201520190565b1561365557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152fd5b613725906136dd6136c38261256d565b73ffffffffffffffffffffffffffffffffffffffff168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e0840152610120810190611fc8565b90811561376a5761374f61124c6112468460a09461374a601461044d9998101561364e565b612b88565b73ffffffffffffffffffffffffffffffffffffffff16910152565b505060a06000910152565b60a081015173ffffffffffffffffffffffffffffffffffffffff16156137b75760c060035b60ff60408401519116606084015102016080830151019101510290565b60c0600161379a565b6137d86040929594939560608352606083019061262c565b9460208201520152565b9061044d602f60405180947f414132332072657665727465643a20000000000000000000000000000000000060208301526138268151809260208686019101612067565b810103600f8101855201836105ab565b916000926000925a936139046020835193613865855173ffffffffffffffffffffffffffffffffffffffff1690565b9561387d6138766040830183611fc8565b9084613e0d565b60a086015173ffffffffffffffffffffffffffffffffffffffff16906138a243600052565b85809373ffffffffffffffffffffffffffffffffffffffff809416159889613b3a575b60600151908601516040517f3a871cdd0000000000000000000000000000000000000000000000000000000081529788968795869390600485016137c0565b03938a1690f1829181613b1a575b50613b115750600190613923612d80565b6308c379a014613abd575b50613a50575b613941575b50505a900391565b61396b9073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b613986610a2c82546dffffffffffffffffffffffffffff1690565b8083116139e3576139dc926dffffffffffffffffffffffffffff9103166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b3880613939565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601760408201527f41413231206469646e2774207061792070726566756e6400000000000000000060608201520190565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601660408201527f4141323320726576657274656420286f72204f4f47290000000000000000000060608201520190565b613ac5612d9e565b9081613ad1575061392e565b610f2191613adf91506137e2565b6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301612882565b95506139349050565b613b3391925060203d81116123385761232981836105ab565b9038613912565b9450613b80610a2c613b6c8c73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b546dffffffffffffffffffffffffffff1690565b8b811115613b975750856060835b969150506138c5565b606087918d03613b8e565b90926000936000935a94613beb6020835193613bd2855173ffffffffffffffffffffffffffffffffffffffff1690565b9561387d613be36040830183611fc8565b90848c61412b565b03938a1690f1829181613ded575b50613de45750600190613c0a612d80565b6308c379a014613d8e575b50613d20575b613c29575b5050505a900391565b613c539073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b91613c6f610a2c84546dffffffffffffffffffffffffffff1690565b90818311613cba575082547fffffffffffffffffffffffffffffffffffff0000000000000000000000000000169190036dffffffffffffffffffffffffffff16179055388080613c20565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152608490fd5b610f21846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601660408201527f4141323320726576657274656420286f72204f4f47290000000000000000000060608201520190565b613d96612d9e565b9081613da25750613c15565b8691613dae91506137e2565b90610f216040519283927f220266b60000000000000000000000000000000000000000000000000000000084526004840161289a565b9650613c1b9050565b613e0691925060203d81116123385761232981836105ab565b9038613bf9565b909180613e1957505050565b81515173ffffffffffffffffffffffffffffffffffffffff1692833b6140be57606083510151604051907f570e1a3600000000000000000000000000000000000000000000000000000000825260208280613e78878760048401612d2c565b0381600073ffffffffffffffffffffffffffffffffffffffff95867f00000000000000000000000000000000000000000000000000000000000000001690f19182156140b1575b600092614091575b508082169586156140245716809503613fb7573b15613f4a5761124c6112467fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d93613f1193612b88565b602083810151935160a001516040805173ffffffffffffffffffffffffffffffffffffffff9485168152939091169183019190915290a3565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152602060408201527f4141313520696e6974436f6465206d757374206372656174652073656e64657260608201520190565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152602060408201527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657260608201520190565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601b60408201527f4141313320696e6974436f6465206661696c6564206f72204f4f47000000000060608201520190565b6140aa91925060203d811161146a5761145b81836105ab565b9038613ec7565b6140b9612183565b613ebf565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601f60408201527f414131302073656e64657220616c726561647920636f6e73747275637465640060608201520190565b9290918161413a575b50505050565b82515173ffffffffffffffffffffffffffffffffffffffff1693843b6143e257606084510151604051907f570e1a3600000000000000000000000000000000000000000000000000000000825260208280614199888860048401612d2c565b0381600073ffffffffffffffffffffffffffffffffffffffff95867f00000000000000000000000000000000000000000000000000000000000000001690f19182156143d5575b6000926143b5575b5080821696871561434757168096036142d9573b15614273575061124c6112467fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d9361423393612b88565b602083810151935160a001516040805173ffffffffffffffffffffffffffffffffffffffff9485168152939091169183019190915290a338808080614134565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b610f21826040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152602060408201527f4141313420696e6974436f6465206d7573742072657475726e2073656e64657260608201520190565b610f21846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601b60408201527f4141313320696e6974436f6465206661696c6564206f72204f4f47000000000060608201520190565b6143ce91925060203d811161146a5761145b81836105ab565b90386141e8565b6143dd612183565b6141e0565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b1561444f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152fd5b919060408382031261035957825167ffffffffffffffff81116103595783019080601f83011215610359578151916144e483610639565b916144f260405193846105ab565b838352602084830101116103595760209261451291848085019101612067565b92015190565b9061044d602f60405180947f414133332072657665727465643a20000000000000000000000000000000000060208301526138268151809260208686019101612067565b93919260609460009460009380519261459b60a08a86015195614580888811614448565b015173ffffffffffffffffffffffffffffffffffffffff1690565b916145c68373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b946145e2610a2c87546dffffffffffffffffffffffffffff1690565b968588106147825773ffffffffffffffffffffffffffffffffffffffff60208a98946146588a966dffffffffffffffffffffffffffff8b6146919e03166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b015194604051998a98899788937ff465c77e000000000000000000000000000000000000000000000000000000008552600485016137c0565b0395169103f190818391849361475c575b506147555750506001906146b4612d80565b6308c379a014614733575b506146c657565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601660408201527f4141333320726576657274656420286f72204f4f47290000000000000000000060608201520190565b61473b612d9e565b908161474757506146bf565b610f2191613adf9150614518565b9450925050565b90925061477b91503d8085833e61477381836105ab565b8101906144ad565b91386146a2565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b91949293909360609560009560009382519061481660a08b84015193614580848611614448565b936148418573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61485c610a2c82546dffffffffffffffffffffffffffff1690565b8781106149b7579273ffffffffffffffffffffffffffffffffffffffff60208a989693946146588a966dffffffffffffffffffffffffffff8d6148d69e9c9a03166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b0395169103f1908183918493614999575b506149915750506001906148f9612d80565b6308c379a014614972575b5061490c5750565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b61497a612d9e565b90816149865750614904565b613dae925050614518565b955093505050565b9092506149b091503d8085833e61477381836105ab565b91386148e7565b610f218a6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b60031115614a2f57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b929190614a7c6040916002865260606020870152606086019061208a565b930152565b939291906003811015614a2f57604091614a7c91865260606020870152606086019061208a565b9061044d603660405180947f4141353020706f73744f702072657665727465643a20000000000000000000006020830152614aec8151809260208686019101612067565b81010360168101855201836105ab565b929190925a93600091805191614b1183615318565b9260a0810195614b35875173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff93908481169081614ca457505050614b76825173ffffffffffffffffffffffffffffffffffffffff1690565b985b5a90030193840297604084019089825110614c37577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94614bc26020928c614c329551039061553a565b015194896020614c04614be9865173ffffffffffffffffffffffffffffffffffffffff1690565b9a5173ffffffffffffffffffffffffffffffffffffffff1690565b9401519785604051968796169a16988590949392606092608083019683521515602083015260408201520152565b0390a4565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152602060408201527f414135312070726566756e642062656c6f772061637475616c476173436f737460608201520190565b9a918051614cb4575b5050614b78565b6060850151600099509091803b15614ddb579189918983614d07956040518097819682957fa9a234090000000000000000000000000000000000000000000000000000000084528c029060048401614a5e565b0393f19081614dc8575b50614dc3576001614d20612d80565b6308c379a014614da4575b614d37575b3880614cad565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b614dac612d9e565b80614db75750614d2b565b613adf610f2191614aa8565b614d30565b80610f48614dd59261057b565b38614d11565b8980fd5b9392915a90600092805190614df382615318565b9360a0830196614e17885173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff95908681169081614f0d57505050614e58845173ffffffffffffffffffffffffffffffffffffffff1690565b915b5a9003019485029860408301908a825110614ea757507f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f949392614bc2614c32938c60209451039061553a565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b93918051614f1d575b5050614e5a565b606087015160009a509091803b1561504357918a918a83614f70956040518097819682957fa9a234090000000000000000000000000000000000000000000000000000000084528c029060048401614a5e565b0393f19081615030575b5061502b576001614f89612d80565b6308c379a01461500e575b614fa0575b3880614f16565b610f218b6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b615016612d9e565b806150215750614f94565b613dae8d91614aa8565b614f99565b80610f4861503d9261057b565b38614f7a565b8a80fd5b909392915a9480519161505983615318565b9260a081019561507d875173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff938185169182615165575050506150bd825173ffffffffffffffffffffffffffffffffffffffff1690565b985b5a90030193840297604084019089825110614c37577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f946151096020928c614c329551039061553a565b61511288614a25565b015194896020615139614be9865173ffffffffffffffffffffffffffffffffffffffff1690565b940151604080519182529815602082015297880152606087015290821695909116939081906080820190565b9a918151615175575b50506150bf565b8784026151818a614a25565b60028a1461520c576060860151823b15610359576151d493600080948d604051978896879586937fa9a2340900000000000000000000000000000000000000000000000000000000855260048501614a81565b0393f180156151ff575b6151ec575b505b388061516e565b80610f486151f99261057b565b386151e3565b615207612183565b6151de565b6060860151823b156103595761525793600080948d604051978896879586937fa9a2340900000000000000000000000000000000000000000000000000000000855260048501614a81565b0393f19081615305575b50615300576001615270612d80565b6308c379a0146152ed575b156151e5576040517f220266b600000000000000000000000000000000000000000000000000000000815280610f21600482016080906000815260406020820152601260408201527f4141353020706f73744f7020726576657274000000000000000000000000000060608201520190565b6152f5612d9e565b80614db7575061527b565b6151e5565b80610f486153129261057b565b38615261565b60e060c082015191015180821461533c57480180821015615337575090565b905090565b5090565b6040519061534d8261058f565b60006040838281528260208201520152565b615367615340565b5065ffffffffffff808260a01c1680156153b3575b604051926153898461058f565b73ffffffffffffffffffffffffffffffffffffffff8116845260d01c602084015216604082015290565b508061537c565b6153cf6153d5916153c9615340565b5061535f565b9161535f565b9073ffffffffffffffffffffffffffffffffffffffff9182825116928315615461575b65ffffffffffff928391826040816020850151169301511693836040816020840151169201511690808410615459575b50808511615451575b506040519561543f8761058f565b16855216602084015216604082015290565b935038615431565b925038615428565b8151811693506153f8565b73ffffffffffffffffffffffffffffffffffffffff16600052600160205267ffffffffffffffff6154c88260401c60406000209077ffffffffffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b918254926154d584612491565b9055161490565b9073ffffffffffffffffffffffffffffffffffffffff6154fa612b50565b9216600052600060205263ffffffff600160406000206dffffffffffffffffffffffffffff815460781c1685520154166020830152565b61044d3361562b565b73ffffffffffffffffffffffffffffffffffffffff16600052600060205260406000206dffffffffffffffffffffffffffff8082541692830180931161561e575b8083116155c05761044d92166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152fd5b615626612190565b61557b565b73ffffffffffffffffffffffffffffffffffffffff9061564b348261553a565b168060005260006020527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c460206dffffffffffffffffffffffffffff60406000205416604051908152a2565b1561569e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152fd5b1561570357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152fd5b1561576857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152fd5b156157cd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152fd5b9065ffffffffffff6080600161044d9461588b6dffffffffffffffffffffffffffff86511682906dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b602085015115156eff000000000000000000000000000082549160701b16807fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff83161783557fffffff000000000000000000000000000000ffffffffffffffffffffffffffff7cffffffffffffffffffffffffffff000000000000000000000000000000604089015160781b16921617178155019263ffffffff6060820151167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000008554161784550151167fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff69ffffffffffff0000000083549260201b169116179055565b1561599657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152fd5b91909165ffffffffffff808094169116019182116121cd57565b15615a1557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152fd5b15615a7a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152fd5b15615adf57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152fd5b15615b4457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152fd5b15615ba957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152fd5b816040519182372090565b9060009283809360208451940192f190565b3d610800808211615c4b575b50604051906020818301016040528082526000602083013e90565b905038615c3056fea2646970667358221220a706d8b02d7086d80e9330811f5af84b2614abdc5e9a1f2260126070a31d7cee64736f6c634300081100336080806040523461001657610210908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b346100c95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c95760043567ffffffffffffffff918282116100c957366023830112156100c95781600401359283116100c95736602484840101116100c9576100c561009e84602485016100fc565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90806014116101bb5767ffffffffffffffff917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec82018381116101cd575b604051937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81600b8701160116850190858210908211176101c0575b604052808452602084019036848401116101bb576020946000600c819682946014880187378301015251923560601c5af19060005191156101b557565b60009150565b600080fd5b6101c86100cc565b610178565b6101d56100cc565b61013a56fea26469706673582212201927e80b76ab9b71c952137dd676621a9fdf520c25928815636594036eb1c40364736f6c63430008110033";
    var isSuperArgs = (xs) => xs.length > 1;
    var EntryPoint_v100__factory = class extends ethers_1.ContractFactory {
      constructor(...args) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
      }
      deploy(overrides) {
        return super.deploy(overrides || {});
      }
      getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
      }
      attach(address) {
        return super.attach(address);
      }
      connect(signer) {
        return super.connect(signer);
      }
      static createInterface() {
        return new ethers_1.utils.Interface(_abi);
      }
      static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
      }
    };
    exports.EntryPoint_v100__factory = EntryPoint_v100__factory;
    EntryPoint_v100__factory.bytecode = _bytecode;
    EntryPoint_v100__factory.abi = _abi;
  }
});

// node_modules/@biconomy/common/dist/src/typechain/factories/SmartAccountFactory_v100__factory.js
var require_SmartAccountFactory_v100_factory = __commonJS({
  "node_modules/@biconomy/common/dist/src/typechain/factories/SmartAccountFactory_v100__factory.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SmartAccountFactory_v100__factory = void 0;
    var ethers_1 = (init_lib22(), __toCommonJS(lib_exports22));
    var _abi = [
      {
        inputs: [
          {
            internalType: "address",
            name: "_basicImplementation",
            type: "address"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "AccountCreation",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "account",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "AccountCreationWithoutIndex",
        type: "event"
      },
      {
        inputs: [],
        name: "accountCreationCode",
        outputs: [
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [],
        name: "basicImplementation",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_owner",
            type: "address"
          }
        ],
        name: "deployAccount",
        outputs: [
          {
            internalType: "address",
            name: "proxy",
            type: "address"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_owner",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "_index",
            type: "uint256"
          }
        ],
        name: "deployCounterFactualAccount",
        outputs: [
          {
            internalType: "address",
            name: "proxy",
            type: "address"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_owner",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "_index",
            type: "uint256"
          }
        ],
        name: "getAddressForCounterFactualAccount",
        outputs: [
          {
            internalType: "address",
            name: "_account",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "minimalHandler",
        outputs: [
          {
            internalType: "contract DefaultCallbackHandler",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      }
    ];
    var _bytecode = "0x60c060405234801561001057600080fd5b50604051610f5a380380610f5a83398101604081905261002f916100de565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601d60248201527f696d706c656d656e746174696f6e2063616e6e6f74206265207a65726f000000604482015260640160405180910390fd5b6001600160a01b0381166080526040516100a2906100d1565b604051809103906000f0801580156100be573d6000803e3d6000fd5b506001600160a01b031660a0525061010e565b6105e68061097483390190565b6000602082840312156100f057600080fd5b81516001600160a01b038116811461010757600080fd5b9392505050565b60805160a05161082661014e6000396000818160c1015261056501526000818161010e015281816101b10152818161032b015261043f01526108266000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063d668bfa811610050578063d668bfa8146100e3578063da9fc1ae146100f6578063daf0dfc81461010957600080fd5b8063088924ef1461007757806331c884df146100a75780633b3cb143146100bc575b600080fd5b61008a6100853660046105fe565b610130565b6040516001600160a01b0390911681526020015b60405180910390f35b6100af6102bd565b60405161009e919061064c565b61008a7f000000000000000000000000000000000000000000000000000000000000000081565b61008a6100f13660046105fe565b6102e7565b61008a61010436600461067f565b610408565b61008a7f000000000000000000000000000000000000000000000000000000000000000081565b60008061013c84610550565b90506000818051906020012084604051602001610163929190918252602082015260400190565b60405160208183030381529060405280519060200120905060006040518060200161018d906105d5565b601f1982820381018352601f9091011660408190526101da91906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906020016106a1565b6040516020818303038152906040529050818151826020016000f593506001600160a01b0384166102525760405162461bcd60e51b815260206004820152601360248201527f437265617465322063616c6c206661696c65640000000000000000000000000060448201526064015b60405180910390fd5b8251156102735760008060008551602087016000895af10361027357600080fd5b84866001600160a01b0316856001600160a01b03167f8967dcaa00d8fcb9bb2b5beff4aaf8c020063512cf08fbe11fec37a1e3a150f260405160405180910390a450505092915050565b6060604051806020016102cf906105d5565b601f1982820381018352601f90910116604052919050565b6000806102f384610550565b9050600060405180602001610307906105d5565b601f1982820381018352601f90910116604081905261035491906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906020016106a1565b60408051808303601f1901815282825284516020958601208584015282820196909652805180830382018152606080840183528151918601919091208751978601979097207fff0000000000000000000000000000000000000000000000000000000000000060808501523090911b6bffffffffffffffffffffffff19166081840152609583019690965260b5808301969096528051808303909601865260d5909101905250825192019190912092915050565b6000806040518060200161041b906105d5565b601f1982820381018352601f90910116604081905261046891906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906020016106a1565b60405160208183030381529060405290508051816020016000f091506001600160a01b0382166104da5760405162461bcd60e51b815260206004820152601260248201527f4372656174652063616c6c206661696c656400000000000000000000000000006044820152606401610249565b60006104e584610550565b8051909150156105095760008060008351602085016000885af10361050957600080fd5b836001600160a01b0316836001600160a01b03167f9a6cbf173278cf7dfadb45414d824f7828c0c94479f1b15e45453653070cf65760405160405180910390a35050919050565b6040516001600160a01b0380831660248301527f000000000000000000000000000000000000000000000000000000000000000016604482015260609060640160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663784d200b60e11b17905292915050565b61012d806106c483390190565b80356001600160a01b03811681146105f957600080fd5b919050565b6000806040838503121561061157600080fd5b61061a836105e2565b946020939093013593505050565b60005b8381101561064357818101518382015260200161062b565b50506000910152565b602081526000825180602084015261066b816040850160208701610628565b601f01601f19169190910160400192915050565b60006020828403121561069157600080fd5b61069a826105e2565b9392505050565b600083516106b3818460208801610628565b919091019182525060200191905056fe608060405234801561001057600080fd5b5060405161012d38038061012d83398101604081905261002f91610090565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601e60248201527f496e76616c696420696d706c656d656e746174696f6e20616464726573730000604482015260640160405180910390fd5b30556100c0565b6000602082840312156100a257600080fd5b81516001600160a01b03811681146100b957600080fd5b9392505050565b605f806100ce6000396000f3fe608060405230543660008037600080366000845af43d6000803e8080156024573d6000f35b3d6000fdfea2646970667358221220a7977748230fa5c96134083773f708cfbe78723c07e58051ac6bd8c4877a4d5a64736f6c63430008110033a26469706673582212201fec0df9ef9e79bf19660229f5fa1cf6bbf67a01bd022c1b6866ccb255550e5764736f6c63430008110033608060405234801561001057600080fd5b506105c6806100206000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c8063a3f4df7e1161005b578063a3f4df7e146100fb578063bc197c8114610144578063f23a6e6114610166578063ffa1ad741461018657600080fd5b806223de291461008157806301ffc9a71461009b578063150b7a02146100c3575b600080fd5b61009961008f3660046102a0565b5050505050505050565b005b6100ae6100a936600461034b565b6101c2565b60405190151581526020015b60405180910390f35b6100e26100d136600461037c565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100ba565b6101376040518060400160405280601881526020017f44656661756c742043616c6c6261636b2048616e646c6572000000000000000081525081565b6040516100ba91906103eb565b6100e261015236600461047e565b63bc197c8160e01b98975050505050505050565b6100e2610174366004610518565b63f23a6e6160e01b9695505050505050565b6101376040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b60006001600160e01b03198216630271189760e51b14806101f357506001600160e01b03198216630a85bd0160e11b145b8061020d57506001600160e01b031982166223de2960e01b145b8061022857506001600160e01b031982166301ffc9a760e01b145b92915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461025257600080fd5b919050565b60008083601f84011261026957600080fd5b50813567ffffffffffffffff81111561028157600080fd5b60208301915083602082850101111561029957600080fd5b9250929050565b60008060008060008060008060c0898b0312156102bc57600080fd5b6102c58961022e565b97506102d360208a0161022e565b96506102e160408a0161022e565b955060608901359450608089013567ffffffffffffffff8082111561030557600080fd5b6103118c838d01610257565b909650945060a08b013591508082111561032a57600080fd5b506103378b828c01610257565b999c989b5096995094979396929594505050565b60006020828403121561035d57600080fd5b81356001600160e01b03198116811461037557600080fd5b9392505050565b60008060008060006080868803121561039457600080fd5b61039d8661022e565b94506103ab6020870161022e565b935060408601359250606086013567ffffffffffffffff8111156103ce57600080fd5b6103da88828901610257565b969995985093965092949392505050565b600060208083528351808285015260005b81811015610418578581018301518582016040015282016103fc565b506000604082860101526040601f19601f8301168501019250505092915050565b60008083601f84011261044b57600080fd5b50813567ffffffffffffffff81111561046357600080fd5b6020830191508360208260051b850101111561029957600080fd5b60008060008060008060008060a0898b03121561049a57600080fd5b6104a38961022e565b97506104b160208a0161022e565b9650604089013567ffffffffffffffff808211156104ce57600080fd5b6104da8c838d01610439565b909850965060608b01359150808211156104f357600080fd5b6104ff8c838d01610439565b909650945060808b013591508082111561032a57600080fd5b60008060008060008060a0878903121561053157600080fd5b61053a8761022e565b95506105486020880161022e565b94506040870135935060608701359250608087013567ffffffffffffffff81111561057257600080fd5b61057e89828a01610257565b979a969950949750929593949250505056fea2646970667358221220f9bf68273e40153fec1c25026a3e3145e43e4e63c519d4413921bbc86925381c64736f6c63430008110033";
    var isSuperArgs = (xs) => xs.length > 1;
    var SmartAccountFactory_v100__factory = class extends ethers_1.ContractFactory {
      constructor(...args) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
      }
      deploy(_basicImplementation, overrides) {
        return super.deploy(_basicImplementation, overrides || {});
      }
      getDeployTransaction(_basicImplementation, overrides) {
        return super.getDeployTransaction(_basicImplementation, overrides || {});
      }
      attach(address) {
        return super.attach(address);
      }
      connect(signer) {
        return super.connect(signer);
      }
      static createInterface() {
        return new ethers_1.utils.Interface(_abi);
      }
      static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
      }
    };
    exports.SmartAccountFactory_v100__factory = SmartAccountFactory_v100__factory;
    SmartAccountFactory_v100__factory.bytecode = _bytecode;
    SmartAccountFactory_v100__factory.abi = _abi;
  }
});

// node_modules/@biconomy/common/dist/src/typechain/factories/SmartAccount_v100__factory.js
var require_SmartAccount_v100_factory = __commonJS({
  "node_modules/@biconomy/common/dist/src/typechain/factories/SmartAccount_v100__factory.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SmartAccount_v100__factory = void 0;
    var ethers_1 = (init_lib22(), __toCommonJS(lib_exports22));
    var _abi = [
      {
        inputs: [
          {
            internalType: "contract IEntryPoint",
            name: "anEntryPoint",
            type: "address"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "smartAccount",
            type: "address"
          }
        ],
        name: "AlreadyInitialized",
        type: "error"
      },
      {
        inputs: [],
        name: "BaseImplementationCannotBeZero",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "caller",
            type: "address"
          }
        ],
        name: "CallerIsNotAnEntryPoint",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "caller",
            type: "address"
          }
        ],
        name: "CallerIsNotEntryPointOrOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "caller",
            type: "address"
          }
        ],
        name: "CallerIsNotOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "caller",
            type: "address"
          }
        ],
        name: "CallerIsNotSelf",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "targetTxGas",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "success",
            type: "bool"
          }
        ],
        name: "CanNotEstimateGas",
        type: "error"
      },
      {
        inputs: [],
        name: "DelegateCallsOnly",
        type: "error"
      },
      {
        inputs: [],
        name: "EntryPointCannotBeZero",
        type: "error"
      },
      {
        inputs: [],
        name: "ExecutionFailed",
        type: "error"
      },
      {
        inputs: [],
        name: "HandlerCannotBeZero",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "implementationAddress",
            type: "address"
          }
        ],
        name: "InvalidImplementation",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "restoredSigner",
            type: "address"
          },
          {
            internalType: "address",
            name: "expectedSigner",
            type: "address"
          }
        ],
        name: "InvalidSignature",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "caller",
            type: "address"
          }
        ],
        name: "MixedAuthFail",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "ModuleAlreadyEnabled",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "expectedModule",
            type: "address"
          },
          {
            internalType: "address",
            name: "returnedModule",
            type: "address"
          },
          {
            internalType: "address",
            name: "prevModule",
            type: "address"
          }
        ],
        name: "ModuleAndPrevModuleMismatch",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "ModuleCannotBeZeroOrSentinel",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "ModuleNotEnabled",
        type: "error"
      },
      {
        inputs: [],
        name: "ModulesAlreadyInitialized",
        type: "error"
      },
      {
        inputs: [],
        name: "ModulesSetupExecutionFailed",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "gasLeft",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gasRequired",
            type: "uint256"
          }
        ],
        name: "NotEnoughGasLeft",
        type: "error"
      },
      {
        inputs: [],
        name: "OwnerCanNotBeSelf",
        type: "error"
      },
      {
        inputs: [],
        name: "OwnerCannotBeZero",
        type: "error"
      },
      {
        inputs: [],
        name: "OwnerProvidedIsSame",
        type: "error"
      },
      {
        inputs: [],
        name: "ReentrancyProtectionActivated",
        type: "error"
      },
      {
        inputs: [],
        name: "TokenGasPriceFactorCanNotBeZero",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            internalType: "address",
            name: "dest",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "TokenTransferFailed",
        type: "error"
      },
      {
        inputs: [],
        name: "TransferToZeroAddressAttempt",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "destLength",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "valueLength",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "funcLength",
            type: "uint256"
          }
        ],
        name: "WrongBatchProvided",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "bytes",
            name: "contractSignature",
            type: "bytes"
          }
        ],
        name: "WrongContractSignature",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "uintS",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "contractSignatureLength",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "signatureLength",
            type: "uint256"
          }
        ],
        name: "WrongContractSignatureFormat",
        type: "error"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "payment",
            type: "uint256"
          }
        ],
        name: "AccountHandlePayment",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "previousHandler",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "handler",
            type: "address"
          }
        ],
        name: "ChangedFallbackHandler",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "DisabledModule",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "_scw",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "_oldEOA",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "_newEOA",
            type: "address"
          }
        ],
        name: "EOAChanged",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "EnabledModule",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            indexed: true,
            internalType: "bytes",
            name: "data",
            type: "bytes"
          },
          {
            indexed: false,
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "txGas",
            type: "uint256"
          }
        ],
        name: "ExecutionFailure",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "ExecutionFromModuleFailure",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "ExecutionFromModuleSuccess",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            indexed: true,
            internalType: "bytes",
            name: "data",
            type: "bytes"
          },
          {
            indexed: false,
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "txGas",
            type: "uint256"
          }
        ],
        name: "ExecutionSuccess",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "oldImplementation",
            type: "address"
          },
          {
            indexed: true,
            internalType: "address",
            name: "newImplementation",
            type: "address"
          }
        ],
        name: "ImplementationUpdated",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: false,
            internalType: "address",
            name: "module",
            type: "address"
          },
          {
            indexed: false,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: false,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            indexed: false,
            internalType: "bytes",
            name: "data",
            type: "bytes"
          },
          {
            indexed: false,
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          }
        ],
        name: "ModuleTransaction",
        type: "event"
      },
      {
        anonymous: false,
        inputs: [
          {
            indexed: true,
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            indexed: true,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "SmartAccountReceivedNativeToken",
        type: "event"
      },
      {
        stateMutability: "nonpayable",
        type: "fallback"
      },
      {
        inputs: [],
        name: "VERSION",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "addDeposit",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes32",
            name: "dataHash",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes"
          }
        ],
        name: "checkSignatures",
        outputs: [],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "prevModule",
            type: "address"
          },
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "disableModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "domainSeparator",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "enableModule",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address"
              },
              {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "uint256",
                name: "targetTxGas",
                type: "uint256"
              }
            ],
            internalType: "struct Transaction",
            name: "_tx",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "tokenGasPriceFactor",
                type: "uint256"
              },
              {
                internalType: "address",
                name: "gasToken",
                type: "address"
              },
              {
                internalType: "address payable",
                name: "refundReceiver",
                type: "address"
              }
            ],
            internalType: "struct FeeRefund",
            name: "refundInfo",
            type: "tuple"
          },
          {
            internalType: "uint256",
            name: "_nonce",
            type: "uint256"
          }
        ],
        name: "encodeTransactionData",
        outputs: [
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "entryPoint",
        outputs: [
          {
            internalType: "contract IEntryPoint",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address"
              },
              {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "uint256",
                name: "targetTxGas",
                type: "uint256"
              }
            ],
            internalType: "struct Transaction",
            name: "_tx",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "tokenGasPriceFactor",
                type: "uint256"
              },
              {
                internalType: "address",
                name: "gasToken",
                type: "address"
              },
              {
                internalType: "address payable",
                name: "refundReceiver",
                type: "address"
              }
            ],
            internalType: "struct FeeRefund",
            name: "refundInfo",
            type: "tuple"
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes"
          }
        ],
        name: "execTransaction",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          }
        ],
        name: "execTransactionFromModule",
        outputs: [
          {
            internalType: "bool",
            name: "success",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          }
        ],
        name: "execTransactionFromModuleReturnData",
        outputs: [
          {
            internalType: "bool",
            name: "success",
            type: "bool"
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address"
              },
              {
                internalType: "enum Enum.Operation",
                name: "operation",
                type: "uint8"
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes"
              },
              {
                internalType: "uint256",
                name: "targetTxGas",
                type: "uint256"
              }
            ],
            internalType: "struct Transaction",
            name: "_tx",
            type: "tuple"
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "baseGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "tokenGasPriceFactor",
                type: "uint256"
              },
              {
                internalType: "address",
                name: "gasToken",
                type: "address"
              },
              {
                internalType: "address payable",
                name: "refundReceiver",
                type: "address"
              }
            ],
            internalType: "struct FeeRefund",
            name: "refundInfo",
            type: "tuple"
          },
          {
            internalType: "bytes",
            name: "signatures",
            type: "bytes"
          }
        ],
        name: "execTransaction_S6W",
        outputs: [
          {
            internalType: "bool",
            name: "success",
            type: "bool"
          }
        ],
        stateMutability: "payable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address[]",
            name: "dest",
            type: "address[]"
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]"
          },
          {
            internalType: "bytes[]",
            name: "func",
            type: "bytes[]"
          }
        ],
        name: "executeBatchCall",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address[]",
            name: "dest",
            type: "address[]"
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]"
          },
          {
            internalType: "bytes[]",
            name: "func",
            type: "bytes[]"
          }
        ],
        name: "executeBatchCall_4by",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "dest",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "func",
            type: "bytes"
          }
        ],
        name: "executeCall",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "dest",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "func",
            type: "bytes"
          }
        ],
        name: "executeCall_s1m",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "getChainId",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "getDeposit",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "getFallbackHandler",
        outputs: [
          {
            internalType: "address",
            name: "_handler",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "getImplementation",
        outputs: [
          {
            internalType: "address",
            name: "_implementation",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "start",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "pageSize",
            type: "uint256"
          }
        ],
        name: "getModulesPaginated",
        outputs: [
          {
            internalType: "address[]",
            name: "array",
            type: "address[]"
          },
          {
            internalType: "address",
            name: "next",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "batchId",
            type: "uint256"
          }
        ],
        name: "getNonce",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          },
          {
            internalType: "uint256",
            name: "targetTxGas",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "baseGas",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "tokenGasPriceFactor",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "gasToken",
            type: "address"
          },
          {
            internalType: "address payable",
            name: "refundReceiver",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "_nonce",
            type: "uint256"
          }
        ],
        name: "getTransactionHash",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "gasUsed",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "baseGas",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "tokenGasPriceFactor",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "gasToken",
            type: "address"
          },
          {
            internalType: "address payable",
            name: "refundReceiver",
            type: "address"
          }
        ],
        name: "handlePaymentRevert",
        outputs: [
          {
            internalType: "uint256",
            name: "requiredGas",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_owner",
            type: "address"
          },
          {
            internalType: "address",
            name: "_handler",
            type: "address"
          }
        ],
        name: "init",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "module",
            type: "address"
          }
        ],
        name: "isModuleEnabled",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes32",
            name: "_dataHash",
            type: "bytes32"
          },
          {
            internalType: "bytes",
            name: "_signature",
            type: "bytes"
          }
        ],
        name: "isValidSignature",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "nonce",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "nonces",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            internalType: "address",
            name: "dest",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "pullTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          },
          {
            internalType: "enum Enum.Operation",
            name: "operation",
            type: "uint8"
          }
        ],
        name: "requiredTxGas",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "handler",
            type: "address"
          }
        ],
        name: "setFallbackHandler",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_newOwner",
            type: "address"
          }
        ],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes4",
            name: "_interfaceId",
            type: "bytes4"
          }
        ],
        name: "supportsInterface",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address payable",
            name: "dest",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "_implementation",
            type: "address"
          }
        ],
        name: "updateImplementation",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes"
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256"
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256"
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes"
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes"
              }
            ],
            internalType: "struct UserOperation",
            name: "userOp",
            type: "tuple"
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32"
          },
          {
            internalType: "uint256",
            name: "missingAccountFunds",
            type: "uint256"
          }
        ],
        name: "validateUserOp",
        outputs: [
          {
            internalType: "uint256",
            name: "validationData",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address payable",
            name: "withdrawAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawDepositTo",
        outputs: [],
        stateMutability: "payable",
        type: "function"
      },
      {
        stateMutability: "payable",
        type: "receive"
      }
    ];
    var _bytecode = "0x60e06040523480156200001157600080fd5b5060405162003915380380620039158339810160408190526200003491620000a1565b60016031553060c052603280546001600160a01b03191673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1790556001600160a01b0381166200008b5760405163091748f960e21b815260040160405180910390fd5b6001600160a01b03166080524660a052620000d3565b600060208284031215620000b457600080fd5b81516001600160a01b0381168114620000cc57600080fd5b9392505050565b60805160a05160c0516137e86200012d60003960006102af015260006104ed01526000818161078701528181610dcf01528181610f2c01528181610fd901528181611935015281816119c6015261204f01526137e86000f3fe6080604052600436106102a05760003560e01c80638da5cb5b1161016e578063c399ec88116100cb578063f08a03231161007f578063f698da2511610064578063f698da251461088e578063fc7d3d79146108f7578063ffa1ad741461090a5761031c565b8063f08a03231461084e578063f09a40161461086e5761031c565b8063cc2f8452116100b0578063cc2f8452146107e0578063e009cfde1461080e578063ed516d511461082e5761031c565b8063c399ec88146107ab578063c4ca3a9c146107c05761031c565b8063aaf10f4211610122578063ac85dca711610107578063ac85dca714610743578063affed0e014610763578063b0d691fe146107785761031c565b8063aaf10f421461070f578063abc1b745146107235761031c565b80639e5d4c49116101535780639e5d4c49146106af578063a18f51e5146106cf578063a9059cbb146106ef5761031c565b80638da5cb5b1461066f578063912ccaa31461068f5761031c565b80633a871cdd1161021c5780635229073f116101d0578063610b5925116101b5578063610b5925146105f45780637455ce3c14610614578063856dfd99146106275761031c565b80635229073f146105995780635c0ba299146105c75761031c565b8063468721a711610201578063468721a71461055e5780634a58db191461057e5780634d44560d146105865761031c565b80633a871cdd146105115780633d46b819146105315761031c565b806313af4035116102735780631626ba7e116102585780631626ba7e146104855780632d9ad53d146104be5780633408e470146104de5761031c565b806313af40351461042a578063141a468c1461044a5761031c565b80610772146103825780618f2d146103a457806301ffc9a7146103c4578063025b22bc1461040a5761031c565b3661031c576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102ee57604051633c97166560e21b815260040160405180910390fd5b604051349033907ed05ab44e279ac59e855cb75dc2ae23b200ad994797b6f1f028f96a46ecce0290600090a3005b34801561032857600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d480548061035357005b36600080373360601b365260008060143601600080855af190503d6000803e8061037c573d6000fd5b503d6000f35b34801561038e57600080fd5b506103a261039d366004612ab2565b610953565b005b3480156103b057600080fd5b506103a26103bf366004612b53565b6109a2565b3480156103d057600080fd5b506103f56103df366004612c03565b6001600160e01b0319166301ffc9a760e01b1490565b60405190151581526020015b60405180910390f35b34801561041657600080fd5b506103a2610425366004612c20565b610ab3565b34801561043657600080fd5b506103a2610445366004612c20565b610bbb565b34801561045657600080fd5b50610477610465366004612c3d565b60336020526000908152604090205481565b604051908152602001610401565b34801561049157600080fd5b506104a56104a0366004612d22565b610cbd565b6040516001600160e01b03199091168152602001610401565b3480156104ca57600080fd5b506103f56104d9366004612c20565b610d8a565b3480156104ea57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610477565b34801561051d57600080fd5b5061047761052c366004612d69565b610dc2565b34801561053d57600080fd5b5061047761054c366004612c3d565b60009081526033602052604090205490565b34801561056a57600080fd5b506103f5610579366004612dcc565b610e2b565b6103a2610f2a565b6103a2610594366004612e36565b610faa565b3480156105a557600080fd5b506105b96105b4366004612dcc565b611060565b604051610401929190612eb2565b3480156105d357600080fd5b506105e76105e2366004612fad565b611096565b6040516104019190613005565b34801561060057600080fd5b506103a261060f366004612c20565b6111f0565b6103f5610622366004613018565b611316565b34801561063357600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d4545b6040516001600160a01b039091168152602001610401565b34801561067b57600080fd5b50603254610657906001600160a01b031681565b34801561069b57600080fd5b506103a26106aa366004612b53565b611554565b3480156106bb57600080fd5b506103a26106ca366004612ab2565b611562565b3480156106db57600080fd5b506104776106ea36600461308d565b61156e565b3480156106fb57600080fd5b506103a261070a366004612e36565b611707565b34801561071b57600080fd5b503054610657565b34801561072f57600080fd5b5061047761073e3660046130eb565b6117a5565b34801561074f57600080fd5b506103a261075e3660046131b3565b611878565b34801561076f57600080fd5b5061047761190e565b34801561078457600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610657565b3480156107b757600080fd5b506104776119a6565b3480156107cc57600080fd5b506104776107db3660046131f4565b6119f5565b3480156107ec57600080fd5b506108006107fb366004612e36565b611a6e565b604051610401929190613265565b34801561081a57600080fd5b506103a26108293660046132c2565b611b67565b34801561083a57600080fd5b506103a2610849366004612d22565b611c99565b34801561085a57600080fd5b506103a2610869366004612c20565b611f2b565b34801561087a57600080fd5b506103a26108893660046132c2565b611fa2565b34801561089a57600080fd5b50610477604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152469181019190915230606082015260009060800160405160208183030381529060405280519060200120905090565b6103f5610905366004613018565b612037565b34801561091657600080fd5b506105e76040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b61095b612044565b61099c848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506120aa92505050565b50505050565b6109aa612044565b8415806109b75750848314155b806109c25750828114155b156109f657604051630a0c0a9160e31b81526004810186905260248101849052604481018290526064015b60405180910390fd5b60005b85811015610aaa57610aa2878783818110610a1657610a166132fb565b9050602002016020810190610a2b9190612c20565b868684818110610a3d57610a3d6132fb565b90506020020135858585818110610a5657610a566132fb565b9050602002810190610a689190613311565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506120aa92505050565b6001016109f9565b50505050505050565b6032546001600160a01b03163314801590610ace5750333014155b15610aee576040516308a0b0a560e11b81523360048201526024016109ed565b6001600160a01b038116610b445760405162461bcd60e51b815260206004820152601660248201527f416464726573732063616e6e6f74206265207a65726f0000000000000000000060448201526064016109ed565b6001600160a01b0381163b610b7757604051630c76093760e01b81526001600160a01b03821660048201526024016109ed565b308054908290556040516001600160a01b0380841691908316907faa3f731066a578e5f39b4215468d826cdd15373cbc0dfc9cb9bdc649718ef7da90600090a35050565b6032546001600160a01b03163314801590610bd65750333014155b15610bf6576040516308a0b0a560e11b81523360048201526024016109ed565b6001600160a01b038116610c1d57604051639b15e16f60e01b815260040160405180910390fd5b306001600160a01b03821603610c46576040516375b4d24760e01b815260040160405180910390fd5b6032546001600160a01b0390811690821603610c7557604051638a95d3fb60e01b815260040160405180910390fd5b60328054908290556040516001600160a01b0391821691831690829030907ff2c2b1b5312b1e31ad49a7d85acd6322ae6facc51488810b882ecdb4df861cd490600090a45050565b6032546000906001600160a01b03163b15610d4c57603254604051630b135d3f60e11b81526001600160a01b0390911690631626ba7e90610d049086908690600401613358565b602060405180830381865afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190613371565b9050610d84565b610d5683836120c8565b6032546001600160a01b03918216911603610d795750630b135d3f60e11b610d84565b506001600160e01b03195b92915050565b600060016001600160a01b03831614801590610d845750506001600160a01b0390811660009081526020819052604090205416151590565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e0f57604051635dac3db760e11b81523360048201526024016109ed565b610e1984846120ec565b9050610e24826122dd565b9392505050565b60003360011480610e525750336000908152602081905260409020546001600160a01b0316155b15610e72576040516321ac7c5f60e01b81523360048201526024016109ed565b610e7f858585855a612328565b90508015610ef6577f8c014e41cffd68ba64f3e7830b8b2e4ee860509d8deab25ebbcbba2f0405e2da3386868686604051610ebe9594939291906133c6565b60405180910390a160405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a2610f22565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b158015610f8f57600080fd5b505af1158015610fa3573d6000803e3d6000fd5b5050505050565b6032546001600160a01b03163314610fd75760405163d4ed9a1760e01b81523360048201526024016109ed565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561104457600080fd5b505af1158015611058573d6000803e3d6000fd5b505050505050565b6000606061107086868686610e2b565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b606060007fda033865d68bf4a40a5a7cb4159a99e33dba8569e65ea3e38222eb12d9e66eee60001b856000015186604001518760600151805190602001208860200151896080015189600001518a602001518b604001518c606001518d608001518d6040516020016111139c9b9a99989796959493929190613411565b60408051601f1981840301815291905280516020909101209050601960f81b600160f81b611193604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152469181019190915230606082015260009060800160405160208183030381529060405280519060200120905090565b6040517fff0000000000000000000000000000000000000000000000000000000000000093841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509392505050565b6111f861242f565b6001600160a01b038116158061121757506001600160a01b0381166001145b156112405760405163cadb248f60e01b81526001600160a01b03821660048201526024016109ed565b6001600160a01b0381811660009081526020819052604090205416156112845760405163b29d459560e01b81526001600160a01b03821660048201526024016109ed565b600060208181527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b0385811680865260408087208054939094166001600160a01b03199384161790935560019095528254168417909155519182527fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f8440910160405180910390a150565b600060026031540361133b57604051637465d9d160e01b815260040160405180910390fd5b600260315560005a6001600090815260336020527f10f6f77027d502f219862b0303542eb5dd005b06fa23ff4d1775aaa45bbf94778054929350909182916113959189918991908561138c836134a0565b91905055611096565b80516020820120925090506113aa8286611c99565b506113d9603f60068860800151901b6113c391906134b9565b60808801516113d4906109c46134db565b612451565b6113e5906101f46134db565b5a1015611444575a611416603f60068960800151901b61140591906134b9565b60808901516113d4906109c46134db565b611422906101f46134db565b604051633b4daac960e01b8152600481019290925260248201526044016109ed565b61148486600001518760400151886060015189602001518960200151600014611471578a60800151612328565b6109c45a61147f91906134ee565b612328565b92508215801561149657506080860151155b80156114a457506020850151155b156114dd5760808601516020860151604051631061f87f60e31b81526004810192909252602482015283151560448201526064016109ed565b60008560200151600014611545576115145a6114f990856134ee565b8751602089015160408a015160608b015160808c0151612467565b905080827f3fd74c38c9f1b6f0499c6d0128fbf77a796dbacc7eda0369b13006dc977bb56b60405160405180910390a35b50506001603155509392505050565b6110588686868686866109a2565b61099c84848484610953565b6000836000036115c05760405162461bcd60e51b815260206004820152601b60248201527f696e76616c696420746f6b656e4761735072696365466163746f72000000000060448201526064016109ed565b60005a905060006001600160a01b038416156115dc57836115de565b325b90506001600160a01b0385166116615760003a88106115fd573a6115ff565b875b6116098a8c6134db565b6116139190613501565b9050600080600080600085875af190508061165a5760405163190eecf360e31b8152600060048201526001600160a01b0384166024820152604481018390526064016109ed565b50506116c9565b6000868861166f8b8d6134db565b6116799190613501565b61168391906134b9565b9050611690868383612592565b6116c75760405163190eecf360e31b81526001600160a01b03808816600483015283166024820152604481018290526064016109ed565b505b5a82039250826040516020016116e191815260200190565b60408051601f198184030181529082905262461bcd60e51b82526109ed91600401613005565b6032546001600160a01b031633146117345760405163d4ed9a1760e01b81523360048201526024016109ed565b6001600160a01b03821661175b576040516309293b1960e41b815260040160405180910390fd5b600080600080600085875af19050806117a05760405163190eecf360e31b8152600060048201526001600160a01b0384166024820152604481018390526064016109ed565b505050565b6000806040518060a001604052808f6001600160a01b031681526020018b60018111156117d4576117d461338e565b81526020018e81526020018d8d8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060209081018b90526040805160a0810182528b81529182018a905281018890526001600160a01b0380881660608301528616608082015290915061185d828286611096565b80519060200120925050509c9b505050505050505050505050565b6032546001600160a01b031633146118a55760405163d4ed9a1760e01b81523360048201526024016109ed565b6001600160a01b0382166118cc576040516309293b1960e41b815260040160405180910390fd5b6118d7838383612592565b6117a05760405163190eecf360e31b81526001600160a01b03808516600483015283166024820152604481018290526064016109ed565b604051631aab3f0d60e11b8152306004820152600060248201819052906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906335567e1a906044015b602060405180830381865afa15801561197d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a19190613518565b905090565b6040516370a0823160e01b81523060048201526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401611960565b6000805a9050611a3e878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525089925050505a612328565b611a5b57604051632b3f6d1160e21b815260040160405180910390fd5b5a604080519183036020830152016116e1565b606060008267ffffffffffffffff811115611a8b57611a8b612c56565b604051908082528060200260200182016040528015611ab4578160200160208202803683370190505b506001600160a01b0380861660009081526020819052604081205492945091165b6001600160a01b03811615801590611af757506001600160a01b038116600114155b8015611b0257508482105b15611b595780848381518110611b1a57611b1a6132fb565b6001600160a01b039283166020918202929092018101919091529181166000908152918290526040909120541681611b51816134a0565b925050611ad5565b908352919491935090915050565b611b6f61242f565b6001600160a01b0381161580611b8e57506001600160a01b0381166001145b15611bb75760405163cadb248f60e01b81526001600160a01b03821660048201526024016109ed565b6001600160a01b03828116600090815260208190526040902054811690821614611c1f576001600160a01b0382811660008181526020819052604090819020549051633103525b60e21b815284841660048201529216602483015260448201526064016109ed565b6001600160a01b03818116600081815260208181526040808320805488871685528285208054919097166001600160a01b03199182161790965592849052825490941690915591519081527faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276910160405180910390a15050565b604181511015611ceb5760405162461bcd60e51b815260206004820152601960248201527f496e76616c6964207369676e617475726573206c656e6774680000000000000060448201526064016109ed565b600080600080611d0e856020810151604082015160419092015160ff1692909190565b9195509350915060ff8416600003611e535750816041821015611d55576040516338a245ff60e11b81526004810183905260006024820181905260448201526064016109ed565b6020828601810151865190918290611d6e9086906134db565b611d7891906134db565b1115611dab5785516040516338a245ff60e11b8152600481018590526024810183905260448101919091526064016109ed565b604051630b135d3f60e11b808252878501602001916001600160a01b03851690631626ba7e90611de1908c908690600401613358565b602060405180830381865afa158015611dfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e229190613371565b6001600160e01b03191614611e4c578060405163605d348960e01b81526004016109ed9190613005565b5050611ee6565b601e8460ff161115611ed657611ece611e6d600486613531565b8484611ec68a6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9291906126e3565b509050611ee6565b611ee2868585856126e3565b5090505b6032546001600160a01b03828116911614611058576032546040516310b5d43760e21b81526001600160a01b03808416600483015290911660248201526044016109ed565b611f3361242f565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d454611f5e826127a7565b816001600160a01b0316816001600160a01b03167f06be9a1bea257286cf2afa8205ed494ca9d6a4b41aa58d04238deebada20fb0c60405160405180910390a35050565b6032546001600160a01b031615611fce576040516393360fbf60e01b81523060048201526024016109ed565b6001600160a01b038216611ff557604051639b15e16f60e01b815260040160405180910390fd5b603280546001600160a01b0319166001600160a01b038416179055612019816127a7565b6120336000604051806020016040528060008152506127f2565b5050565b6000610f22848484611316565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480159061208857506032546001600160a01b03163314155b156120a8576040516332dbd3c760e11b81523360048201526024016109ed565b565b60008082516020840185875af16040513d6000823e81610fa3573d81fd5b60008060006120d785856128bc565b915091506120e481612901565b509392505050565b600036816120fd6060860186613311565b90925090508015612204576000612117600482848661354a565b61212091613574565b90506361a2b3b760e01b6001600160e01b0319821601612202576000808061214b856004818961354a565b81019061215891906135a4565b6001600160a01b03808416600090815260208190526040902054939650919450925016156121fe57604051631179c1f560e11b81526001600160a01b038416906322f383ea906121ae908c908c90600401613662565b6020604051808303816000875af11580156121cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f19190613518565b9650505050505050610d84565b5050505b505b600061225d856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506122ad612270610140880188613311565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506120c89050565b6032546001600160a01b039081169116146122ce5760019350505050610d84565b50600095945050505050565b50565b80156122da5760405133906000199083906000818181858888f193505050503d806000811461099c576040519150601f19603f3d011682016040523d82523d6000602084013e61099c565b6000600183600181111561233e5761233e61338e565b03612356576000808551602087018986f49050612366565b600080855160208701888a87f190505b80156123cb578360405161237a919061377b565b604051809103902085876001600160a01b03167f81d12fffced46c214dfae8ab8fa0b9f7b69f70c9d500e33f612f2105deb261ee86866040516123be929190613797565b60405180910390a4612426565b836040516123d9919061377b565b604051809103902085876001600160a01b03167f3ddd038f78c876172d5dbfd730b14c9f8692dfa197ef104eaac6df3f85a0874a868660405161241d929190613797565b60405180910390a45b95945050505050565b3330146120a8576040516301478e3360e21b81523360048201526024016109ed565b60008183116124605781610e24565b5090919050565b60008360000361248a5760405163653f35a360e01b815260040160405180910390fd5b60006001600160a01b038316156124a157826124a3565b325b90506001600160a01b038416612523573a86106124c0573a6124c2565b855b6124cc888a6134db565b6124d69190613501565b9150600080600080600086865af190508061251d5760405163190eecf360e31b8152600060048201526001600160a01b0383166024820152604481018490526064016109ed565b50612587565b848661252f898b6134db565b6125399190613501565b61254391906134b9565b9150612550848284612592565b6125875760405163190eecf360e31b81526001600160a01b03808616600483015282166024820152604481018390526064016109ed565b509695505050505050565b60006001600160a01b0384166125ea5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e2063616e206e6f74206265207a65726f206164647265737300000060448201526064016109ed565b6000846001600160a01b03163b116126445760405162461bcd60e51b815260206004820152601c60248201527f746f6b656e20636f6e747261637420646f65736e27742065786973740000000060448201526064016109ed565b604080516001600160a01b03851660248201526044808201859052825180830390910181526064909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b178152825160009182896127105a03f13d80156126c657602081146126ce57600093506126d9565b8193506126d9565b600051158215171593505b5050509392505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561271a575060009050600361279e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561276e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166127975760006001925092505061279e565b9150600090505b94509492505050565b6001600160a01b0381166127ce5760405163dd449f5f60e01b815260040160405180910390fd5b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d455565b600160009081526020527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d546001600160a01b0316156128455760405163df8cc4e360e01b815260040160405180910390fd5b600160008181526020527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b03191690911790556001600160a01b038216156120335761289f8260008360015a612328565b6120335760405163032e3a3960e51b815260040160405180910390fd5b60008082516041036128f25760208301516040840151606085015160001a6128e6878285856126e3565b945094505050506128fa565b506000905060025b9250929050565b60008160048111156129155761291561338e565b0361291d5750565b60018160048111156129315761293161338e565b0361297e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016109ed565b60028160048111156129925761299261338e565b036129df5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016109ed565b60038160048111156129f3576129f361338e565b036122da5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016109ed565b6001600160a01b03811681146122da57600080fd5b8035612a6b81612a4b565b919050565b60008083601f840112612a8257600080fd5b50813567ffffffffffffffff811115612a9a57600080fd5b6020830191508360208285010111156128fa57600080fd5b60008060008060608587031215612ac857600080fd5b8435612ad381612a4b565b935060208501359250604085013567ffffffffffffffff811115612af657600080fd5b612b0287828801612a70565b95989497509550505050565b60008083601f840112612b2057600080fd5b50813567ffffffffffffffff811115612b3857600080fd5b6020830191508360208260051b85010111156128fa57600080fd5b60008060008060008060608789031215612b6c57600080fd5b863567ffffffffffffffff80821115612b8457600080fd5b612b908a838b01612b0e565b90985096506020890135915080821115612ba957600080fd5b612bb58a838b01612b0e565b90965094506040890135915080821115612bce57600080fd5b50612bdb89828a01612b0e565b979a9699509497509295939492505050565b6001600160e01b0319811681146122da57600080fd5b600060208284031215612c1557600080fd5b8135610e2481612bed565b600060208284031215612c3257600080fd5b8135610e2481612a4b565b600060208284031215612c4f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715612c8f57612c8f612c56565b60405290565b600082601f830112612ca657600080fd5b813567ffffffffffffffff80821115612cc157612cc1612c56565b604051601f8301601f19908116603f01168101908282118183101715612ce957612ce9612c56565b81604052838152866020858801011115612d0257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215612d3557600080fd5b82359150602083013567ffffffffffffffff811115612d5357600080fd5b612d5f85828601612c95565b9150509250929050565b600080600060608486031215612d7e57600080fd5b833567ffffffffffffffff811115612d9557600080fd5b84016101608187031215612da857600080fd5b95602085013595506040909401359392505050565b803560028110612a6b57600080fd5b60008060008060808587031215612de257600080fd5b8435612ded81612a4b565b935060208501359250604085013567ffffffffffffffff811115612e1057600080fd5b612e1c87828801612c95565b925050612e2b60608601612dbd565b905092959194509250565b60008060408385031215612e4957600080fd5b8235612e5481612a4b565b946020939093013593505050565b60005b83811015612e7d578181015183820152602001612e65565b50506000910152565b60008151808452612e9e816020860160208601612e62565b601f01601f19169290920160200192915050565b8215158152604060208201526000610f226040830184612e86565b600060a08284031215612edf57600080fd5b612ee7612c6c565b90508135612ef481612a4b565b8152612f0260208301612dbd565b602082015260408201356040820152606082013567ffffffffffffffff811115612f2b57600080fd5b612f3784828501612c95565b6060830152506080820135608082015292915050565b600060a08284031215612f5f57600080fd5b612f67612c6c565b90508135815260208201356020820152604082013560408201526060820135612f8f81612a4b565b60608201526080820135612fa281612a4b565b608082015292915050565b600080600060e08486031215612fc257600080fd5b833567ffffffffffffffff811115612fd957600080fd5b612fe586828701612ecd565b935050612ff58560208601612f4d565b915060c084013590509250925092565b602081526000610e246020830184612e86565b600080600060e0848603121561302d57600080fd5b833567ffffffffffffffff8082111561304557600080fd5b61305187838801612ecd565b94506130608760208801612f4d565b935060c086013591508082111561307657600080fd5b5061308386828701612c95565b9150509250925092565b60008060008060008060c087890312156130a657600080fd5b8635955060208701359450604087013593506060870135925060808701356130cd81612a4b565b915060a08701356130dd81612a4b565b809150509295509295509295565b6000806000806000806000806000806000806101608d8f03121561310e57600080fd5b6131188d35612a4b565b8c359b5060208d01359a5067ffffffffffffffff60408e0135111561313c57600080fd5b61314c8e60408f01358f01612a70565b909a50985061315d60608e01612dbd565b975060808d0135965060a08d0135955060c08d0135945060e08d013593506101008d013561318a81612a4b565b92506131996101208e01612a60565b91506101408d013590509295989b509295989b509295989b565b6000806000606084860312156131c857600080fd5b83356131d381612a4b565b925060208401356131e381612a4b565b929592945050506040919091013590565b60008060008060006080868803121561320c57600080fd5b853561321781612a4b565b945060208601359350604086013567ffffffffffffffff81111561323a57600080fd5b61324688828901612a70565b9094509250613259905060608701612dbd565b90509295509295909350565b604080825283519082018190526000906020906060840190828701845b828110156132a75781516001600160a01b031684529284019290840190600101613282565b5050506001600160a01b039490941692019190915250919050565b600080604083850312156132d557600080fd5b82356132e081612a4b565b915060208301356132f081612a4b565b809150509250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261332857600080fd5b83018035915067ffffffffffffffff82111561334357600080fd5b6020019150368190038213156128fa57600080fd5b828152604060208201526000610f226040830184612e86565b60006020828403121561338357600080fd5b8151610e2481612bed565b634e487b7160e01b600052602160045260246000fd5b600281106133c257634e487b7160e01b600052602160045260246000fd5b9052565b60006001600160a01b03808816835280871660208401525084604083015260a060608301526133f860a0830185612e86565b905061340760808301846133a4565b9695505050505050565b6000610180820190508d82526001600160a01b03808e1660208401528c60408401528b6060840152613446608084018c6133a4565b8960a08401528860c08401528760e08401528661010084015280861661012084015280851661014084015250826101608301529d9c50505050505050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600182016134b2576134b261348a565b5060010190565b6000826134d657634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610d8457610d8461348a565b81810381811115610d8457610d8461348a565b8082028115828204841417610d8457610d8461348a565b60006020828403121561352a57600080fd5b5051919050565b60ff8281168282160390811115610d8457610d8461348a565b6000808585111561355a57600080fd5b8386111561356757600080fd5b5050820193919092039150565b6001600160e01b0319813581811691600485101561359c5780818660040360031b1b83161692505b505092915050565b6000806000606084860312156135b957600080fd5b83356135c481612a4b565b925060208401359150604084013567ffffffffffffffff8111156135e757600080fd5b61308386828701612c95565b6000808335601e1984360301811261360a57600080fd5b830160208101925035905067ffffffffffffffff81111561362a57600080fd5b8036038213156128fa57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526136836040820161367685612a60565b6001600160a01b03169052565b60208301356060820152600061369c60408501856135f3565b6101608060808601526136b46101a086018385613639565b92506136c360608801886135f3565b9250603f19808786030160a08801526136dd858584613639565b9450608089013560c088015260a089013560e0880152610100935060c089013584880152610120915060e089013582880152610140848a013581890152613726838b018b6135f3565b9550925081888703018489015261373e868685613639565b955061374c818b018b6135f3565b955093505080878603016101808801525050613769838383613639565b93505050508260208301529392505050565b6000825161378d818460208701612e62565b9190910192915050565b604081016137a582856133a4565b826020830152939250505056fea26469706673582212206d38de10695d463253620f7bec76e681851e44f22392d864735b57ecaf843b1d64736f6c63430008110033";
    var isSuperArgs = (xs) => xs.length > 1;
    var SmartAccount_v100__factory = class extends ethers_1.ContractFactory {
      constructor(...args) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
      }
      deploy(anEntryPoint, overrides) {
        return super.deploy(anEntryPoint, overrides || {});
      }
      getDeployTransaction(anEntryPoint, overrides) {
        return super.getDeployTransaction(anEntryPoint, overrides || {});
      }
      attach(address) {
        return super.attach(address);
      }
      connect(signer) {
        return super.connect(signer);
      }
      static createInterface() {
        return new ethers_1.utils.Interface(_abi);
      }
      static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
      }
    };
    exports.SmartAccount_v100__factory = SmartAccount_v100__factory;
    SmartAccount_v100__factory.bytecode = _bytecode;
    SmartAccount_v100__factory.abi = _abi;
  }
});

// node_modules/@biconomy/common/dist/src/typechain/factories/index.js
var require_factories = __commonJS({
  "node_modules/@biconomy/common/dist/src/typechain/factories/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SmartAccount_v100__factory = exports.SmartAccountFactory_v100__factory = exports.EntryPoint_v100__factory = void 0;
    var EntryPoint_v100__factory_1 = require_EntryPoint_v100_factory();
    Object.defineProperty(exports, "EntryPoint_v100__factory", { enumerable: true, get: function() {
      return EntryPoint_v100__factory_1.EntryPoint_v100__factory;
    } });
    var SmartAccountFactory_v100__factory_1 = require_SmartAccountFactory_v100_factory();
    Object.defineProperty(exports, "SmartAccountFactory_v100__factory", { enumerable: true, get: function() {
      return SmartAccountFactory_v100__factory_1.SmartAccountFactory_v100__factory;
    } });
    var SmartAccount_v100__factory_1 = require_SmartAccount_v100_factory();
    Object.defineProperty(exports, "SmartAccount_v100__factory", { enumerable: true, get: function() {
      return SmartAccount_v100__factory_1.SmartAccount_v100__factory;
    } });
  }
});

// node_modules/@biconomy/common/dist/src/typechain/index.js
var require_typechain = __commonJS({
  "node_modules/@biconomy/common/dist/src/typechain/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SmartAccountFactory_v100__factory = exports.SmartAccount_v100__factory = exports.EntryPoint_v100__factory = exports.factories = void 0;
    exports.factories = __importStar(require_factories());
    var EntryPoint_v100__factory_1 = require_EntryPoint_v100_factory();
    Object.defineProperty(exports, "EntryPoint_v100__factory", { enumerable: true, get: function() {
      return EntryPoint_v100__factory_1.EntryPoint_v100__factory;
    } });
    var SmartAccount_v100__factory_1 = require_SmartAccount_v100_factory();
    Object.defineProperty(exports, "SmartAccount_v100__factory", { enumerable: true, get: function() {
      return SmartAccount_v100__factory_1.SmartAccount_v100__factory;
    } });
    var SmartAccountFactory_v100__factory_1 = require_SmartAccountFactory_v100_factory();
    Object.defineProperty(exports, "SmartAccountFactory_v100__factory", { enumerable: true, get: function() {
      return SmartAccountFactory_v100__factory_1.SmartAccountFactory_v100__factory;
    } });
  }
});

// node_modules/@biconomy/common/dist/src/Utils.js
var require_Utils = __commonJS({
  "node_modules/@biconomy/common/dist/src/Utils.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getTimestampInSeconds = void 0;
    var getTimestampInSeconds = () => {
      return Math.floor(Date.now() / 1e3);
    };
    exports.getTimestampInSeconds = getTimestampInSeconds;
  }
});

// node_modules/@biconomy/common/dist/src/Constants.js
var require_Constants = __commonJS({
  "node_modules/@biconomy/common/dist/src/Constants.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RPC_PROVIDER_URLS = exports.NODE_CLIENT_URL = void 0;
    var core_types_1 = require_src();
    exports.NODE_CLIENT_URL = "https://sdk-backend.prod.biconomy.io/v1";
    exports.RPC_PROVIDER_URLS = {
      [core_types_1.ChainId.MAINNET]: "https://rpc.ankr.com/eth",
      [core_types_1.ChainId.GOERLI]: "https://rpc.ankr.com/eth_goerli",
      [core_types_1.ChainId.POLYGON_MUMBAI]: "https://rpc.ankr.com/polygon_mumbai",
      [core_types_1.ChainId.POLYGON_MAINNET]: "https://rpc.ankr.com/polygon",
      [core_types_1.ChainId.BSC_TESTNET]: "https://endpoints.omniatech.io/v1/bsc/testnet/public",
      [core_types_1.ChainId.BSC_MAINNET]: "https://rpc.ankr.com/bsc",
      [core_types_1.ChainId.POLYGON_ZKEVM_TESTNET]: "https://rpc.public.zkevm-test.net",
      [core_types_1.ChainId.POLYGON_ZKEVM_MAINNET]: "https://rpc.ankr.com/polygon_zkevm",
      [core_types_1.ChainId.ARBITRUM_GOERLI_TESTNET]: "https://goerli-rollup.arbitrum.io/rpc",
      [core_types_1.ChainId.ARBITRUM_ONE_MAINNET]: "https://rpc.ankr.com/arbitrum",
      [core_types_1.ChainId.ARBITRUM_NOVA_MAINNET]: "https://nova.arbitrum.io/rpc",
      [core_types_1.ChainId.OPTIMISM_MAINNET]: "https://mainnet.optimism.io",
      [core_types_1.ChainId.OPTIMISM_GOERLI_TESTNET]: "https://goerli.optimism.io",
      [core_types_1.ChainId.AVALANCHE_MAINNET]: "https://api.avax.network/ext/bc/C/rpc",
      [core_types_1.ChainId.AVALANCHE_TESTNET]: "https://api.avax-test.network/ext/bc/C/rpc",
      [core_types_1.ChainId.MOONBEAM_MAINNET]: "https://rpc.api.moonbeam.network",
      [core_types_1.ChainId.BASE_GOERLI_TESTNET]: "https://goerli.base.org",
      [core_types_1.ChainId.LINEA_TESTNET]: "https://rpc.goerli.linea.build"
    };
  }
});

// node_modules/@biconomy/common/dist/src/ContractsInstances.js
var require_ContractsInstances = __commonJS({
  "node_modules/@biconomy/common/dist/src/ContractsInstances.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getEntryPointContract = exports.getSAFactoryContract = exports.getSAProxyContract = void 0;
    var core_types_1 = require_src();
    var typechain_1 = require_typechain();
    function getSAProxyContract(contractInstanceDto) {
      const { smartAccountType, version, contractAddress, provider } = contractInstanceDto;
      switch (version) {
        case "V1_0_0":
          if (smartAccountType === core_types_1.SmartAccountType.BICONOMY) {
            return typechain_1.SmartAccount_v100__factory.connect(contractAddress, provider);
          }
          break;
        default:
          return typechain_1.SmartAccount_v100__factory.connect(contractAddress, provider);
      }
      throw new Error("Invalid version or smartAccountType provided for proxy contract instance");
    }
    exports.getSAProxyContract = getSAProxyContract;
    function getSAFactoryContract(contractInstanceDto) {
      const { smartAccountType, version, contractAddress, provider } = contractInstanceDto;
      switch (version) {
        case "V1_0_0":
          if (smartAccountType === core_types_1.SmartAccountType.BICONOMY) {
            return typechain_1.SmartAccountFactory_v100__factory.connect(contractAddress, provider);
          }
          break;
        default:
          return typechain_1.SmartAccountFactory_v100__factory.connect(contractAddress, provider);
      }
      throw new Error("Invalid version or smartAccountType provided for factory contract instance");
    }
    exports.getSAFactoryContract = getSAFactoryContract;
    function getEntryPointContract(contractInstanceDto) {
      const { smartAccountType, version, contractAddress, provider } = contractInstanceDto;
      switch (version) {
        case "V0_0_5":
          if (smartAccountType === core_types_1.SmartAccountType.BICONOMY) {
            return typechain_1.EntryPoint_v100__factory.connect(contractAddress, provider);
          }
          break;
        default:
          return typechain_1.EntryPoint_v100__factory.connect(contractAddress, provider);
      }
      throw new Error("Invalid version or smartAccountType provided for entrypoint contract instance");
    }
    exports.getEntryPointContract = getEntryPointContract;
  }
});

// node_modules/@biconomy/common/dist/src/index.js
var require_src2 = __commonJS({
  "node_modules/@biconomy/common/dist/src/index.js"(exports) {
    "use strict";
    init_process();
    init_buffer();
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    __exportStar(require_ERC4337Utils(), exports);
    __exportStar(require_Logger(), exports);
    __exportStar(require_httpRequests(), exports);
    __exportStar(require_typechain(), exports);
    __exportStar(require_Utils(), exports);
    __exportStar(require_Constants(), exports);
    __exportStar(require_ContractsInstances(), exports);
  }
});

export {
  require_utils,
  require_src2 as require_src
};
//# sourceMappingURL=chunk-GL4ZGVOU.js.map
