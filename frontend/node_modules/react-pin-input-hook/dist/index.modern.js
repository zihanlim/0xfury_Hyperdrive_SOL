import*as e from"react";function l(){return l=Object.assign?Object.assign.bind():function(e){for(var l=1;l<arguments.length;l++){var t=arguments[l];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},l.apply(this,arguments)}function t({values:t,onChange:n,onComplete:a,actionRef:r,autoFocus:u=!1,defaultValues:s=Array(6).fill(""),type:o="numeric",otp:c=!1,placeholder:i="â—‹",disabled:f=!1,mask:d=!1,error:p=!1}={}){const[b,h]=e.useState(s),[C,g]=e.useState(-1),k=void 0!==t,m=k?t:b,v="alphanumeric"===o,y=e.useRef(Array(m.length).fill(null)),x=e.useCallback((e=0)=>{var l;null==(l=y.current[e])||l.focus()},[]);e.useEffect(()=>{u&&x()},[u,x]);const j=e.useCallback(()=>{var e;null==(e=y.current[C])||e.blur()},[C]);e.useImperativeHandle(r,()=>({focus:(e=0)=>{const l=m.findIndex(e=>!e);x(p?-1===l?e:l:e)},blur:j}),[j,x,m,p]);const O=e.useCallback(e=>l=>{y.current[e]=l},[]),w=e.useCallback(e=>{k||h(e),null==n||n(e)},[k,h,n]),A=e.useCallback(e=>l=>{let{value:t}=l.target;if(t=t.trim(),!(v?/^[a-z\d]*$/i:/^\d*$/).test(t))return;if(v&&(t=t.toUpperCase()),t.length>2)return void(t.length===m.length&&(w(t.split("")),null==a||a(t)));if(2===t.length){const l=m[e];if(l===t[0])t=t[1];else{if(l!==t[1])return;t=t[0]}}const n=m.slice();if(n[e]=t,w(n),t&&(n.includes("")||null==a||a(n.join("")),e!==m.length-1))if(p){const e=n.findIndex(e=>!e);-1!==e&&x(e)}else x(e+1)},[v,m,w,a,x,p]),F=e.useCallback(e=>l=>{"Backspace"===l.key&&!m[e]&&e&&x(e-1)},[m,x]),I=e.useCallback(({focus:e=!1}={})=>{w(Array(m.length).fill("")),e?x():j()},[w,m,x,j]),B=e.useCallback(e=>()=>{g(e)},[]),R=e.useCallback(()=>{g(-1)},[]),S=-1!==C;return{fields:m.map((e,t)=>l({ref:O(t),value:e,disabled:f,autoComplete:c?"one-time-code":"off",inputMode:v?"text":"numeric",type:d?"password":"text",placeholder:S?"":i},!f&&{onBlur:R,onFocus:B(t),onChange:A(t),onKeyDown:F(t)})),clear:I,isFocused:S}}export{t as usePinInput};
//# sourceMappingURL=index.modern.js.map
